{
	"info": {
		"_postman_id": "852a135f-61da-404e-ad25-388e957d0489",
		"name": "Restaurant API Documentation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						},
						"description": " List all users"
					},
					"response": [
						{
							"name": "Get All Users",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/user",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:37:43 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": 1,\n        \"username\": \"bcartwight0\",\n        \"password\": \"30ZY8jgN\",\n        \"firstName\": \"Danny\",\n        \"middleName\": \"Benedikt\",\n        \"lastName\": \"Cartwight\",\n        \"givenName\": \"\",\n        \"addr1\": \"957 Hoard Terrace\",\n        \"addr2\": \"\",\n        \"province\": \"Prince Edward Island\",\n        \"postalCode\": \"P7K\",\n        \"sex\": \"M\",\n        \"phone\": \"(546) 9421822\",\n        \"dob\": \"1990-02-28T00:00:00\",\n        \"email\": \"bcartwight0@360.cn\"\n    },\n    {\n        \"id\": 2,\n        \"username\": \"cbourtoumieux1\",\n        \"password\": \"vtUOApTD\",\n        \"firstName\": \"Liuka\",\n        \"middleName\": \"Clementia\",\n        \"lastName\": \"Bourtoumieux\",\n        \"givenName\": \"\",\n        \"addr1\": \"514 Birchwood Road\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"T7E\",\n        \"sex\": \"F\",\n        \"phone\": \"(616) 9734017\",\n        \"dob\": \"1960-05-25T00:00:00\",\n        \"email\": \"cbourtoumieux1@webmd.com\"\n    },\n    {\n        \"id\": 3,\n        \"username\": \"gellerby2\",\n        \"password\": \"GfK7tdw\",\n        \"firstName\": \"Faber\",\n        \"middleName\": \"Gavin\",\n        \"lastName\": \"Ellerby\",\n        \"givenName\": \"\",\n        \"addr1\": \"3644 Hauk Point\",\n        \"addr2\": \"\",\n        \"province\": \"Saskatchewan\",\n        \"postalCode\": \"S6J\",\n        \"sex\": \"M\",\n        \"phone\": \"(379) 6357690\",\n        \"dob\": \"1960-04-29T00:00:00\",\n        \"email\": \"gellerby2@fastcompany.com\"\n    },\n    {\n        \"id\": 4,\n        \"username\": \"dvelden3\",\n        \"password\": \"vMqSFSHc\",\n        \"firstName\": \"Abramo\",\n        \"middleName\": \"Desmund\",\n        \"lastName\": \"Velden\",\n        \"givenName\": \"\",\n        \"addr1\": \"10265 Haas Park\",\n        \"addr2\": \"\",\n        \"province\": \"Newfoundland and Labrador\",\n        \"postalCode\": \"A1X\",\n        \"sex\": \"M\",\n        \"phone\": \"(801) 2788837\",\n        \"dob\": \"1964-11-28T00:00:00\",\n        \"email\": \"dvelden3@jigsy.com\"\n    },\n    {\n        \"id\": 5,\n        \"username\": \"rmarney4\",\n        \"password\": \"f0bQVYD\",\n        \"firstName\": \"Miriam\",\n        \"middleName\": \"Raychel\",\n        \"lastName\": \"Marney\",\n        \"givenName\": \"\",\n        \"addr1\": \"7 Arkansas Street\",\n        \"addr2\": \"\",\n        \"province\": \"Manitoba\",\n        \"postalCode\": \"R7N\",\n        \"sex\": \"F\",\n        \"phone\": \"(337) 7632339\",\n        \"dob\": \"1993-09-28T00:00:00\",\n        \"email\": \"rmarney4@alexa.com\"\n    },\n    {\n        \"id\": 6,\n        \"username\": \"rlomansey5\",\n        \"password\": \"QvniNKmR39y\",\n        \"firstName\": \"Brittan\",\n        \"middleName\": \"Rorie\",\n        \"lastName\": \"Lomansey\",\n        \"givenName\": \"\",\n        \"addr1\": \"68 Birchwood Park\",\n        \"addr2\": \"\",\n        \"province\": \"Ontario\",\n        \"postalCode\": \"K9H\",\n        \"sex\": \"F\",\n        \"phone\": \"(916) 8546933\",\n        \"dob\": \"2001-07-02T00:00:00\",\n        \"email\": \"rlomansey5@live.com\"\n    },\n    {\n        \"id\": 7,\n        \"username\": \"bsegoe6\",\n        \"password\": \"HxQuKTbxEI\",\n        \"firstName\": \"Fabe\",\n        \"middleName\": \"Brendin\",\n        \"lastName\": \"Segoe\",\n        \"givenName\": \"\",\n        \"addr1\": \"5811 Manley Alley\",\n        \"addr2\": \"\",\n        \"province\": \"Ontario\",\n        \"postalCode\": \"V5M\",\n        \"sex\": \"M\",\n        \"phone\": \"(561) 7828607\",\n        \"dob\": \"1986-01-19T00:00:00\",\n        \"email\": \"bsegoe6@ebay.com\"\n    },\n    {\n        \"id\": 8,\n        \"username\": \"ebosomworth7\",\n        \"password\": \"G9XO7P\",\n        \"firstName\": \"Nils\",\n        \"middleName\": \"Elvyn\",\n        \"lastName\": \"Bosomworth\",\n        \"givenName\": \"\",\n        \"addr1\": \"6881 Hintze Court\",\n        \"addr2\": \"\",\n        \"province\": \"Nova Scotia\",\n        \"postalCode\": \"B9A\",\n        \"sex\": \"M\",\n        \"phone\": \"(335) 7170475\",\n        \"dob\": \"1966-04-26T00:00:00\",\n        \"email\": \"ebosomworth7@nbcnews.com\"\n    },\n    {\n        \"id\": 9,\n        \"username\": \"sklimus8\",\n        \"password\": \"f1fhxB95\",\n        \"firstName\": \"Carey\",\n        \"middleName\": \"Stanly\",\n        \"lastName\": \"Klimus\",\n        \"givenName\": \"\",\n        \"addr1\": \"13 Sunnyside Road\",\n        \"addr2\": \"\",\n        \"province\": \"Saskatchewan\",\n        \"postalCode\": \"S7W\",\n        \"sex\": \"M\",\n        \"phone\": \"(701) 2642937\",\n        \"dob\": \"1981-01-02T00:00:00\",\n        \"email\": \"sklimus8@chicagotribune.com\"\n    },\n    {\n        \"id\": 10,\n        \"username\": \"lpfeuffer9\",\n        \"password\": \"ROR3avIyeOIE\",\n        \"firstName\": \"Yoshi\",\n        \"middleName\": \"Leah\",\n        \"lastName\": \"Pfeuffer\",\n        \"givenName\": \"\",\n        \"addr1\": \"64122 Thompson Center\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"K1B\",\n        \"sex\": \"F\",\n        \"phone\": \"(829) 1914999\",\n        \"dob\": \"1977-08-21T00:00:00\",\n        \"email\": \"lpfeuffer9@goodreads.com\"\n    },\n    {\n        \"id\": 11,\n        \"username\": \"wtolottia\",\n        \"password\": \"LE3mJizIOl\",\n        \"firstName\": \"Timotheus\",\n        \"middleName\": \"Wayne\",\n        \"lastName\": \"Tolotti\",\n        \"givenName\": \"\",\n        \"addr1\": \"57663 Bobwhite Center\",\n        \"addr2\": \"\",\n        \"province\": \"Ontario\",\n        \"postalCode\": \"P6A\",\n        \"sex\": \"M\",\n        \"phone\": \"(595) 7302956\",\n        \"dob\": \"1976-10-01T00:00:00\",\n        \"email\": \"wtolottia@cyberchimps.com\"\n    },\n    {\n        \"id\": 12,\n        \"username\": \"emaddinb\",\n        \"password\": \"vbMYZa\",\n        \"firstName\": \"Worthington\",\n        \"middleName\": \"Emmett\",\n        \"lastName\": \"Maddin\",\n        \"givenName\": \"\",\n        \"addr1\": \"492 Dryden Terrace\",\n        \"addr2\": \"\",\n        \"province\": \"Saskatchewan\",\n        \"postalCode\": \"S9H\",\n        \"sex\": \"M\",\n        \"phone\": \"(429) 5235709\",\n        \"dob\": \"1989-09-18T00:00:00\",\n        \"email\": \"emaddinb@telegraph.co.uk\"\n    },\n    {\n        \"id\": 13,\n        \"username\": \"vmaccardc\",\n        \"password\": \"LknIl6r\",\n        \"firstName\": \"Kleon\",\n        \"middleName\": \"Vinny\",\n        \"lastName\": \"MacCard\",\n        \"givenName\": \"\",\n        \"addr1\": \"6 Armistice Pass\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"G8J\",\n        \"sex\": \"M\",\n        \"phone\": \"(400) 5597407\",\n        \"dob\": \"1992-10-09T00:00:00\",\n        \"email\": \"vmaccardc@e-recht24.de\"\n    },\n    {\n        \"id\": 14,\n        \"username\": \"rhasslocherd\",\n        \"password\": \"ZSfZhIW\",\n        \"firstName\": \"Nickie\",\n        \"middleName\": \"Ralf\",\n        \"lastName\": \"Hasslocher\",\n        \"givenName\": \"\",\n        \"addr1\": \"464 Springs Court\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"T3S\",\n        \"sex\": \"M\",\n        \"phone\": \"(770) 3947192\",\n        \"dob\": \"1988-06-19T00:00:00\",\n        \"email\": \"rhasslocherd@arstechnica.com\"\n    },\n    {\n        \"id\": 15,\n        \"username\": \"bfeaveere\",\n        \"password\": \"V1m6tVL3NJ2E\",\n        \"firstName\": \"Sheffie\",\n        \"middleName\": \"Burnard\",\n        \"lastName\": \"Feaveer\",\n        \"givenName\": \"\",\n        \"addr1\": \"6 Manley Trail\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"V1Y\",\n        \"sex\": \"M\",\n        \"phone\": \"(331) 8129174\",\n        \"dob\": \"1952-01-21T00:00:00\",\n        \"email\": \"bfeaveere@mashable.com\"\n    },\n    {\n        \"id\": 16,\n        \"username\": \"rpaffittf\",\n        \"password\": \"r61FDa\",\n        \"firstName\": \"Skip\",\n        \"middleName\": \"Ryun\",\n        \"lastName\": \"Paffitt\",\n        \"givenName\": \"\",\n        \"addr1\": \"968 Spaight Circle\",\n        \"addr2\": \"\",\n        \"province\": \"Manitoba\",\n        \"postalCode\": \"R8N\",\n        \"sex\": \"M\",\n        \"phone\": \"(738) 6403807\",\n        \"dob\": \"1963-09-24T00:00:00\",\n        \"email\": \"rpaffittf@pbs.org\"\n    },\n    {\n        \"id\": 17,\n        \"username\": \"kbirnieg\",\n        \"password\": \"YS3HtxMnB\",\n        \"firstName\": \"Rowney\",\n        \"middleName\": \"Kevin\",\n        \"lastName\": \"Birnie\",\n        \"givenName\": \"\",\n        \"addr1\": \"6 Talisman Hill\",\n        \"addr2\": \"\",\n        \"province\": \"Saskatchewan\",\n        \"postalCode\": \"H4J\",\n        \"sex\": \"M\",\n        \"phone\": \"(252) 8504769\",\n        \"dob\": \"2001-01-21T00:00:00\",\n        \"email\": \"kbirnieg@cbslocal.com\"\n    },\n    {\n        \"id\": 18,\n        \"username\": \"ebacheh\",\n        \"password\": \"fz1aPXR7wXfE\",\n        \"firstName\": \"Ilyssa\",\n        \"middleName\": \"Erna\",\n        \"lastName\": \"Bache\",\n        \"givenName\": \"\",\n        \"addr1\": \"57220 Pierstorff Parkway\",\n        \"addr2\": \"\",\n        \"province\": \"Nova Scotia\",\n        \"postalCode\": \"K9V\",\n        \"sex\": \"F\",\n        \"phone\": \"(270) 6682268\",\n        \"dob\": \"1968-12-10T00:00:00\",\n        \"email\": \"ebacheh@google.de\"\n    },\n    {\n        \"id\": 19,\n        \"username\": \"cpoulneyi\",\n        \"password\": \"b1Wtqv\",\n        \"firstName\": \"Kyle\",\n        \"middleName\": \"Chelsey\",\n        \"lastName\": \"Poulney\",\n        \"givenName\": \"\",\n        \"addr1\": \"6 Thierer Place\",\n        \"addr2\": \"\",\n        \"province\": \"Ontario\",\n        \"postalCode\": \"N4N\",\n        \"sex\": \"F\",\n        \"phone\": \"(502) 5853002\",\n        \"dob\": \"1981-10-26T00:00:00\",\n        \"email\": \"cpoulneyi@about.me\"\n    },\n    {\n        \"id\": 20,\n        \"username\": \"blougheadj\",\n        \"password\": \"p0AJa1fKj\",\n        \"firstName\": \"Virginie\",\n        \"middleName\": \"Bernete\",\n        \"lastName\": \"Loughead\",\n        \"givenName\": \"\",\n        \"addr1\": \"21904 Elka Road\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"T4T\",\n        \"sex\": \"F\",\n        \"phone\": \"(874) 5048208\",\n        \"dob\": \"1977-07-26T00:00:00\",\n        \"email\": \"blougheadj@cisco.com\"\n    },\n    {\n        \"id\": 21,\n        \"username\": \"scoltartk\",\n        \"password\": \"7jYcAjz4\",\n        \"firstName\": \"Fonzie\",\n        \"middleName\": \"Sayres\",\n        \"lastName\": \"Coltart\",\n        \"givenName\": \"\",\n        \"addr1\": \"1276 Bayside Way\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"T4V\",\n        \"sex\": \"M\",\n        \"phone\": \"(161) 5382395\",\n        \"dob\": \"1955-02-24T00:00:00\",\n        \"email\": \"scoltartk@examiner.com\"\n    },\n    {\n        \"id\": 22,\n        \"username\": \"acamberl\",\n        \"password\": \"yrHxNWA\",\n        \"firstName\": \"Antoni\",\n        \"middleName\": \"Allie\",\n        \"lastName\": \"Camber\",\n        \"givenName\": \"\",\n        \"addr1\": \"186 Ridgeview Place\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"K4K\",\n        \"sex\": \"M\",\n        \"phone\": \"(725) 9869269\",\n        \"dob\": \"2001-04-04T00:00:00\",\n        \"email\": \"acamberl@wix.com\"\n    },\n    {\n        \"id\": 23,\n        \"username\": \"dcroptonm\",\n        \"password\": \"DGhfzi\",\n        \"firstName\": \"Ashleigh\",\n        \"middleName\": \"Deanna\",\n        \"lastName\": \"Cropton\",\n        \"givenName\": \"\",\n        \"addr1\": \"529 Esker Center\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"V9L\",\n        \"sex\": \"F\",\n        \"phone\": \"(586) 2434691\",\n        \"dob\": \"1973-06-18T00:00:00\",\n        \"email\": \"dcroptonm@smh.com.au\"\n    },\n    {\n        \"id\": 24,\n        \"username\": \"mpaveln\",\n        \"password\": \"EdDkNE\",\n        \"firstName\": \"Prent\",\n        \"middleName\": \"Marten\",\n        \"lastName\": \"Pavel\",\n        \"givenName\": \"\",\n        \"addr1\": \"22 Knutson Circle\",\n        \"addr2\": \"\",\n        \"province\": \"British Columbia\",\n        \"postalCode\": \"V6L\",\n        \"sex\": \"M\",\n        \"phone\": \"(971) 1823691\",\n        \"dob\": \"1962-11-14T00:00:00\",\n        \"email\": \"mpaveln@elegantthemes.com\"\n    },\n    {\n        \"id\": 26,\n        \"username\": \"aglanesterp\",\n        \"password\": \"s1SWZvmlJjKN\",\n        \"firstName\": \"Rasia\",\n        \"middleName\": \"Ardisj\",\n        \"lastName\": \"Glanester\",\n        \"givenName\": \"\",\n        \"addr1\": \"86781 Pepper Wood Junction\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"T1G\",\n        \"sex\": \"F\",\n        \"phone\": \"(915) 8917835\",\n        \"dob\": \"1955-09-15T00:00:00\",\n        \"email\": \"aglanesterp@yellowbook.com\"\n    },\n    {\n        \"id\": 27,\n        \"username\": \"jlillfordq\",\n        \"password\": \"pEBjLG\",\n        \"firstName\": \"Raimundo\",\n        \"middleName\": \"Jeno\",\n        \"lastName\": \"Lillford\",\n        \"givenName\": \"\",\n        \"addr1\": \"731 South Place\",\n        \"addr2\": \"\",\n        \"province\": \"Ontario\",\n        \"postalCode\": \"N9V\",\n        \"sex\": \"M\",\n        \"phone\": \"(719) 1150719\",\n        \"dob\": \"1960-06-02T00:00:00\",\n        \"email\": \"jlillfordq@hibu.com\"\n    },\n    {\n        \"id\": 28,\n        \"username\": \"ojeffryr\",\n        \"password\": \"akaWvF\",\n        \"firstName\": \"Morley\",\n        \"middleName\": \"Onfre\",\n        \"lastName\": \"Jeffry\",\n        \"givenName\": \"\",\n        \"addr1\": \"2538 Grim Way\",\n        \"addr2\": \"\",\n        \"province\": \"Newfoundland and Labrador\",\n        \"postalCode\": \"B2J\",\n        \"sex\": \"M\",\n        \"phone\": \"(631) 8610814\",\n        \"dob\": \"1965-11-11T00:00:00\",\n        \"email\": \"ojeffryr@narod.ru\"\n    },\n    {\n        \"id\": 29,\n        \"username\": \"blunns\",\n        \"password\": \"fWkrqDrMK\",\n        \"firstName\": \"Burl\",\n        \"middleName\": \"Bren\",\n        \"lastName\": \"Lunn\",\n        \"givenName\": \"\",\n        \"addr1\": \"221 Eliot Avenue\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"E1W\",\n        \"sex\": \"M\",\n        \"phone\": \"(603) 8995906\",\n        \"dob\": \"1991-06-29T00:00:00\",\n        \"email\": \"blunns@wsj.com\"\n    },\n    {\n        \"id\": 30,\n        \"username\": \"ckermannest\",\n        \"password\": \"xB4VP84W\",\n        \"firstName\": \"Loy\",\n        \"middleName\": \"Colan\",\n        \"lastName\": \"Kermannes\",\n        \"givenName\": \"\",\n        \"addr1\": \"12 Barby Place\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"T1M\",\n        \"sex\": \"M\",\n        \"phone\": \"(242) 3557124\",\n        \"dob\": \"1969-06-03T00:00:00\",\n        \"email\": \"ckermannest@bloomberg.com\"\n    },\n    {\n        \"id\": 31,\n        \"username\": \"bestcookna123\",\n        \"password\": \"imthebestcook\",\n        \"firstName\": \"John\",\n        \"middleName\": \"Jonifer\",\n        \"lastName\": \"Johnson\",\n        \"givenName\": \"\",\n        \"addr1\": \"123 Ard Court\",\n        \"addr2\": \"\",\n        \"province\": \"Prince Edward Island\",\n        \"postalCode\": \"P7KTTT\",\n        \"sex\": \"M\",\n        \"phone\": \"(546) 9421822\",\n        \"dob\": \"1990-02-28T00:00:00\",\n        \"email\": \"imhellagood@gmail.com\"\n    },\n    {\n        \"id\": 36,\n        \"username\": \"bestwaiterna\",\n        \"password\": \"imthebestwaiter\",\n        \"firstName\": \"Jack\",\n        \"middleName\": \"Jackerson\",\n        \"lastName\": \"Jackson\",\n        \"givenName\": \"\",\n        \"addr1\": \"123 Big Boy Way\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"Y5H7U8\",\n        \"sex\": \"M\",\n        \"phone\": \"(403) 65465432\",\n        \"dob\": \"1990-02-28T00:00:00\",\n        \"email\": \"imsuperhellagood@gmail.com\"\n    },\n    {\n        \"id\": 37,\n        \"username\": \"bestwaiterna\",\n        \"password\": \"imthebestwaiter\",\n        \"firstName\": \"Jack\",\n        \"middleName\": \"Jackerson\",\n        \"lastName\": \"Jackson\",\n        \"givenName\": \"\",\n        \"addr1\": \"123 Big Boy Way\",\n        \"addr2\": \"\",\n        \"province\": \"Alberta\",\n        \"postalCode\": \"Y5H7U8\",\n        \"sex\": \"M\",\n        \"phone\": \"(403) 65465432\",\n        \"dob\": \"1990-02-28T00:00:00\",\n        \"email\": \"imsuperhellagood@gmail.com\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get User By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{user_id}"
							]
						},
						"description": " List user who has the given id\r\n"
					},
					"response": [
						{
							"name": "Get User ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/user/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:15:21 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": 1,\n    \"username\": \"bcartwight0\",\n    \"password\": \"30ZY8jgN\",\n    \"firstName\": \"Danny\",\n    \"middleName\": \"Benedikt\",\n    \"lastName\": \"Cartwight\",\n    \"givenName\": \"\",\n    \"addr1\": \"957 Hoard Terrace\",\n    \"addr2\": \"\",\n    \"province\": \"Prince Edward Island\",\n    \"postalCode\": \"P7K\",\n    \"sex\": \"M\",\n    \"phone\": \"(546) 9421822\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"bcartwight0@360.cn\"\n}"
						}
					]
				},
				{
					"name": "Get Last Inserted User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/getLastInserted",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"getLastInserted"
							]
						},
						"description": "Get the last inserted user"
					},
					"response": [
						{
							"name": "Get Last Inserted User",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/user/getLastInserted",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"getLastInserted"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:16:56 GMT"
								}
							],
							"cookie": [],
							"body": "The last inserted user has id=33\n"
						}
					]
				},
				{
					"name": "Create New User (Cook)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestcookna\",\n    \"password\": \"imthebestcook\",\n    \"firstName\": \"John\",\n    \"middleName\": \"Jonifer\",\n    \"lastName\": \"Johnson\",\n    \"givenName\": \"\",\n    \"addr1\": \"123 Ard Court\",\n    \"addr2\": \"\",\n    \"province\": \"Prince Edward Island\",\n    \"postalCode\": \"P7KTTT\",\n    \"sex\": \"M\",\n    \"phone\": \"(546) 9421822\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"imhellagood@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/employee/cook",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"employee",
								"cook"
							]
						},
						"description": "Create a new user that is an employee who has the role of cook"
					},
					"response": [
						{
							"name": "Create New User (Cook)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"bestcookna\",\r\n    \"password\": \"imthebestcook\",\r\n    \"firstName\": \"John\",\r\n    \"middleName\": \"Jonifer\",\r\n    \"lastName\": \"Johnson\",\r\n    \"givenName\": \"\",\r\n    \"addr1\": \"123 Ard Court\",\r\n    \"addr2\": \"\",\r\n    \"province\": \"Prince Edward Island\",\r\n    \"postalCode\": \"P7KTTT\",\r\n    \"sex\": \"M\",\r\n    \"phone\": \"(546) 9421822\",\r\n    \"dob\": \"1990-02-28T00:00:00\",\r\n    \"email\": \"imhellagood@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/user/employee/cook",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"employee",
										"cook"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:17:59 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=35 was added succesfully to the User, Employee, and Cook tables\n"
						}
					]
				},
				{
					"name": "Create New User (Waiter)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestwaiterna\",\n    \"password\": \"imthebestwaiter\",\n    \"firstName\": \"Jack\",\n    \"middleName\": \"Jackerson\",\n    \"lastName\": \"Jackson\",\n    \"givenName\": \"\",\n    \"addr1\": \"123 Big Boy Way\",\n    \"addr2\": \"\",\n    \"province\": \"Alberta\",\n    \"postalCode\": \"Y5H7U8\",\n    \"sex\": \"M\",\n    \"phone\": \"(403) 65465432\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"imsuperhellagood@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/employee/waiter",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"employee",
								"waiter"
							]
						},
						"description": "Create a new user that is an employee who has the role of waiter\r\n"
					},
					"response": [
						{
							"name": "Create New User (Waiter)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"bestwaiterna\",\r\n    \"password\": \"imthebestwaiter\",\r\n    \"firstName\": \"Jack\",\r\n    \"middleName\": \"Jackerson\",\r\n    \"lastName\": \"Jackson\",\r\n    \"givenName\": \"\",\r\n    \"addr1\": \"123 Big Boy Way\",\r\n    \"addr2\": \"\",\r\n    \"province\": \"Alberta\",\r\n    \"postalCode\": \"Y5H7U8\",\r\n    \"sex\": \"M\",\r\n    \"phone\": \"(403) 65465432\",\r\n    \"dob\": \"1990-02-28T00:00:00\",\r\n    \"email\": \"imsuperhellagood@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/user/employee/waiter",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"employee",
										"waiter"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:17:44 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=34 was added succesfully to the User, Employee, and Waiter tables\n"
						}
					]
				},
				{
					"name": "Create New User (Customer)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"gimmefood\",\n    \"password\": \"hungry\",\n    \"firstName\": \"Bill\",\n    \"middleName\": \"\",\n    \"lastName\": \"Buamont\",\n    \"givenName\": \"\",\n    \"addr1\": \"789 Poggers Court\",\n    \"addr2\": \"\",\n    \"province\": \"British Columbia\",\n    \"postalCode\": \"A4F5G7\",\n    \"sex\": \"M\",\n    \"phone\": \"(546) 9421822\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"bigeater@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/customer",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"customer"
							]
						},
						"description": "Create a new user that is a customer"
					},
					"response": [
						{
							"name": "Create New User (Customer)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"gimmefood\",\r\n    \"password\": \"hungry\",\r\n    \"firstName\": \"Bill\",\r\n    \"middleName\": \"\",\r\n    \"lastName\": \"Buamont\",\r\n    \"givenName\": \"\",\r\n    \"addr1\": \"789 Poggers Court\",\r\n    \"addr2\": \"\",\r\n    \"province\": \"British Columbia\",\r\n    \"postalCode\": \"A4F5G7\",\r\n    \"sex\": \"M\",\r\n    \"phone\": \"(546) 9421822\",\r\n    \"dob\": \"1990-02-28T00:00:00\",\r\n    \"email\": \"bigeater@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/user/customer",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:39:02 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=38 was added succesfully to the User and Customer tables\n"
						}
					]
				},
				{
					"name": "Create New User (Manager)",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"bestmanager\",\n    \"password\": \"imthebestmanager\",\n    \"firstName\": \"John\",\n    \"middleName\": \"Johnny\",\n    \"lastName\": \"Johnsonn\",\n    \"givenName\": \"\",\n    \"addr1\": \"123 Small Boy Way\",\n    \"addr2\": \"\",\n    \"province\": \"Alberta\",\n    \"postalCode\": \"Y5H7U8\",\n    \"sex\": \"M\",\n    \"phone\": \"(403) 65465432\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"imsuperhellagood@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{api}}/api/user/employee/manager",
							"host": [
								"{{api}}"
							],
							"path": [
								"api",
								"user",
								"employee",
								"manager"
							]
						},
						"description": "Create a new user that is an employee who has the role of manager\r\n"
					},
					"response": [
						{
							"name": "Create New User (Manager)",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"username\": \"bestmanager\",\r\n    \"password\": \"imthebestmanager\",\r\n    \"firstName\": \"John\",\r\n    \"middleName\": \"Johnny\",\r\n    \"lastName\": \"Johnsonn\",\r\n    \"givenName\": \"\",\r\n    \"addr1\": \"123 Small Boy Way\",\r\n    \"addr2\": \"\",\r\n    \"province\": \"Alberta\",\r\n    \"postalCode\": \"Y5H7U8\",\r\n    \"sex\": \"M\",\r\n    \"phone\": \"(403) 65465432\",\r\n    \"dob\": \"1990-02-28T00:00:00\",\r\n    \"email\": \"imsuperhellagood@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/user/employee/manager",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"employee",
										"manager"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:25:25 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=37 was added succesfully to the User, Employee, and Manager tables\n"
						}
					]
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {user_id},\n    \"username\": \"bestcookna123\",\n    \"password\": \"imthebestcook\",\n    \"firstName\": \"John\",\n    \"middleName\": \"Jonifer\",\n    \"lastName\": \"Johnson\",\n    \"givenName\": \"\",\n    \"addr1\": \"123 Ard Court\",\n    \"addr2\": \"\",\n    \"province\": \"Prince Edward Island\",\n    \"postalCode\": \"P7KTTT\",\n    \"sex\": \"M\",\n    \"phone\": \"(546) 9421822\",\n    \"dob\": \"1990-02-28T00:00:00\",\n    \"email\": \"imhellagood@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/user/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{user_id}"
							]
						},
						"description": "Update a user with the given id"
					},
					"response": [
						{
							"name": "Update User",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": 31,\r\n    \"username\": \"bestcookna123\",\r\n    \"password\": \"imthebestcook\",\r\n    \"firstName\": \"John\",\r\n    \"middleName\": \"Jonifer\",\r\n    \"lastName\": \"Johnson\",\r\n    \"givenName\": \"\",\r\n    \"addr1\": \"123 Ard Court\",\r\n    \"addr2\": \"\",\r\n    \"province\": \"Prince Edward Island\",\r\n    \"postalCode\": \"P7KTTT\",\r\n    \"sex\": \"M\",\r\n    \"phone\": \"(546) 9421822\",\r\n    \"dob\": \"1990-02-28T00:00:00\",\r\n    \"email\": \"imhellagood@gmail.com\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/user/31",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"31"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:20:57 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=31 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/user/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user",
								"{user_id}"
							]
						},
						"description": "Delete the user with the id\r\n"
					},
					"response": [
						{
							"name": "Delete User",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/user/38",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"user",
										"38"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:39:07 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=38 deleted succesfully\n"
						}
					]
				}
			],
			"description": "A User of the system who could be a Customer, Cook, Manager, or Waiter/Waitress.",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"id": "5de548a1-9cb3-433c-b749-ad0cdb9360a9",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"id": "f31aa91d-78a1-40c0-87de-82ea9e089b80",
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Waiter",
			"item": [
				{
					"name": "Get All Waiters",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/waiter",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"waiter"
							]
						},
						"description": "List all waiters"
					},
					"response": [
						{
							"name": "Get All Waiters",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/waiter",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"waiter"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:21:10 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 9,\n        \"hours\": 50,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 10,\n        \"hours\": 20,\n        \"type\": \"Part\"\n    },\n    {\n        \"user_ID\": 11,\n        \"hours\": 30,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 12,\n        \"hours\": 55,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 13,\n        \"hours\": 25,\n        \"type\": \"Part\"\n    },\n    {\n        \"user_ID\": 14,\n        \"hours\": 50,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 15,\n        \"hours\": 40,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 16,\n        \"hours\": 40,\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 32,\n        \"hours\": 40,\n        \"type\": \"Full\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Waiter By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/waiter/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"waiter",
								"{user_id}"
							]
						},
						"description": "List waiter who has the given user_id"
					},
					"response": [
						{
							"name": "Get Waiter ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/waiter/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"waiter",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:21:18 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 9,\n    \"hours\": 50,\n    \"type\": \"Full\"\n}"
						}
					]
				},
				{
					"name": "Update Waiter",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": {user_id},\n    \"hours\": 50.00,\n    \"type\": \"Part-Time\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/waiter/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"waiter",
								"{user_id}"
							]
						},
						"description": "Update the waiter with the given user_id"
					},
					"response": [
						{
							"name": "Update Waiter",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_ID\": 9,\r\n    \"hours\": 50.00,\r\n    \"type\": \"Part-Time\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/waiter/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"waiter",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:21:47 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=9 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Waiter",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/waiter/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"waiter",
								"{user_id}"
							]
						},
						"description": "Delete the waiter with the given user_id"
					},
					"response": [
						{
							"name": "Delete Waiter",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/waiter/34",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"waiter",
										"34"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:17:54 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=34 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Cook",
			"item": [
				{
					"name": "List All Cooks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/cook",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cook"
							]
						},
						"description": "  List all cooks\r\n"
					},
					"response": [
						{
							"name": "List All Cooks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/cook",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"cook"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:22:55 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 3,\n        \"specialty\": \"Sea Food\",\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 4,\n        \"specialty\": \"\",\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 5,\n        \"specialty\": \"\",\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 6,\n        \"specialty\": \"\",\n        \"type\": \"Part\"\n    },\n    {\n        \"user_ID\": 31,\n        \"specialty\": \"\",\n        \"type\": \"Full\"\n    },\n    {\n        \"user_ID\": 2,\n        \"specialty\": \"Japanese Cuisine\",\n        \"type\": \"Full\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Cook By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/cook/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cook",
								"{user_id}"
							]
						},
						"description": "List the cook with the given id\r\n"
					},
					"response": [
						{
							"name": "Get All Cooks",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/cook/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"cook",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:22:28 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 2,\n    \"specialty\": \"French Cuisine\",\n    \"type\": \"Full\"\n}"
						}
					]
				},
				{
					"name": "Update Cook",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": {user_id},\n    \"specialty\": \"Japanese Cuisine\",\n    \"type\": \"Full\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/cook/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cook",
								"{user_id}"
							]
						},
						"description": "Update the cook with the given user_id"
					},
					"response": [
						{
							"name": "Update Cook",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_ID\": 2,\r\n    \"specialty\": \"Japanese Cuisine\",\r\n    \"type\": \"Full\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/cook/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"cook",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:22:52 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=2 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Cook By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/cook/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"cook",
								"{user_id}"
							]
						},
						"description": "Delete the cook with the given user_id"
					},
					"response": [
						{
							"name": "Delete Cook",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/cook/35",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"cook",
										"35"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:18:05 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=35 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customer_Transaction",
			"item": [
				{
					"name": "Get All Customer_Transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer_transaction",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer_transaction"
							]
						},
						"description": "List all customer_transactions"
					},
					"response": [
						{
							"name": "Get All Customer Transaction",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer_transaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer_transaction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:27:51 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 30,\n        \"transaction_ID\": 1\n    },\n    {\n        \"user_ID\": 17,\n        \"transaction_ID\": 2\n    },\n    {\n        \"user_ID\": 20,\n        \"transaction_ID\": 3\n    },\n    {\n        \"user_ID\": 30,\n        \"transaction_ID\": 4\n    },\n    {\n        \"user_ID\": 18,\n        \"transaction_ID\": 5\n    },\n    {\n        \"user_ID\": 24,\n        \"transaction_ID\": 6\n    },\n    {\n        \"user_ID\": 20,\n        \"transaction_ID\": 7\n    },\n    {\n        \"user_ID\": 27,\n        \"transaction_ID\": 8\n    },\n    {\n        \"user_ID\": 25,\n        \"transaction_ID\": 9\n    },\n    {\n        \"user_ID\": 23,\n        \"transaction_ID\": 10\n    },\n    {\n        \"user_ID\": 26,\n        \"transaction_ID\": 11\n    },\n    {\n        \"user_ID\": 21,\n        \"transaction_ID\": 12\n    },\n    {\n        \"user_ID\": 30,\n        \"transaction_ID\": 13\n    },\n    {\n        \"user_ID\": 24,\n        \"transaction_ID\": 14\n    },\n    {\n        \"user_ID\": 19,\n        \"transaction_ID\": 15\n    }\n]"
						}
					]
				},
				{
					"name": "Get Customer_Transaction By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer_transaction/{user_id}/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer_transaction",
								"{user_id}",
								"{transaction_id}"
							]
						},
						"description": "List the customer_transaction corresponding to the user_id and transaction_id"
					},
					"response": [
						{
							"name": "Get Customer Transaction ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer_transaction/30/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer_transaction",
										"30",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:28:07 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 30,\n    \"transaction_ID\": 1\n}"
						}
					]
				},
				{
					"name": "Create Customer_Transaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": 1,\n    \"transaction_ID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/customer_transaction",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer_transaction"
							]
						},
						"description": "Create a new customer_transaction\r\n"
					},
					"response": [
						{
							"name": "Create Customer Transaction",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_ID\": 1,\r\n    \"transaction_ID\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/customer_transaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer_transaction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:29:52 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Delete Customer_Transaction By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer_transaction/{user_id}/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer_transaction",
								"{user_id}",
								"{transaction_id}"
							]
						},
						"description": "Delete the customer_transaction with the given user_id and trasaction_id"
					},
					"response": [
						{
							"name": "Delete Customer Transaction",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer_transaction/19/15",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer_transaction",
										"19",
										"15"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:19:10 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=(19,15) deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Customer",
			"item": [
				{
					"name": "Get All Customers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer"
							]
						},
						"description": "List all customers\r\n"
					},
					"response": [
						{
							"name": "Get All Customers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:30:25 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 17,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 18,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 19,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 20,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 21,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 22,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 23,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 24,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 25,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 26,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 27,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 28,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 29,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 30,\n        \"tableNo\": null\n    },\n    {\n        \"user_ID\": 33,\n        \"tableNo\": null\n    }\n]"
						}
					]
				},
				{
					"name": "Get Customer By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"{user_id}"
							]
						},
						"description": "List customer who has the given user_id"
					},
					"response": [
						{
							"name": "Get Customer ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/17",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"17"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:30:40 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 17,\n    \"tableNo\": null\n}"
						}
					]
				},
				{
					"name": "Get Customers At Table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/AtTable/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"AtTable",
								"{tableno}"
							]
						},
						"description": "  List the customer who is sitting at the given table number\r\n"
					},
					"response": [
						{
							"name": "Get Customers At Table",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/AtTable/5",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"AtTable",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:31:12 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 17,\n        \"tableNo\": 5\n    }\n]"
						}
					]
				},
				{
					"name": "Get Customer Transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/getTransactions/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"getTransactions",
								"{user_id}"
							]
						},
						"description": "List all the transactions of the customer with the provided user_id"
					},
					"response": [
						{
							"name": "Get Customer Transaction",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/getTransactions/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"getTransactions",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:31:25 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"transaction_ID\": 1,\n        \"amount\": 192.24,\n        \"date_Time\": \"2017-10-24T20:45:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Customer Review",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/getReviews/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"getReviews",
								"{user_id}"
							]
						},
						"description": "List all the reviews of the customer with the provided user_id"
					},
					"response": [
						{
							"name": "Get Customer Review",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/getReviews/19",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"getReviews",
										"19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:35:37 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 19,\n        \"review_ID\": 2,\n        \"description\": \"I had the salmon with rice. The salmon was little dry but apart from that the attention was good.\",\n        \"rating\": 4,\n        \"dish_ID\": 4\n    }\n]"
						}
					]
				},
				{
					"name": "Get Customer Orders ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/getOrders/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"getOrders",
								"{user_id}"
							]
						},
						"description": "List all the orders of the customer with the provided user_id"
					},
					"response": [
						{
							"name": "Get Customer Orders ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/getOrders/20",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"getOrders",
										"20"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:36:05 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 3,\n        \"user_ID\": 20,\n        \"transaction_ID\": 3,\n        \"date_Time\": \"2020-05-27T22:36:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Update Customer Sit Table",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/sit/{user_id}/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"sit",
								"{user_id}",
								"{tableno}"
							]
						},
						"description": "Update a customer by updating which table the customer is sitting at. Requires a valid user ID and a valid table number. Used if a customer is sitting at a table"
					},
					"response": [
						{
							"name": "Update Customer",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/sit/17/5",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"sit",
										"17",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:12:11 GMT"
								}
							],
							"cookie": [],
							"body": "The customer with id=17 is sitting at table 5"
						}
					]
				},
				{
					"name": "Update Customer Leave Table",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/leave/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"leave",
								"{user_id}"
							]
						},
						"description": " Update a customer by updating which table the customer is sitting at. Requires a valid user ID and a valid table number. Used if a customer has left a table\r\n"
					},
					"response": [
						{
							"name": "Get Customer Leave Table",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/leave/17",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"leave",
										"17"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:42:17 GMT"
								}
							],
							"cookie": [],
							"body": "The customer with id=17 left table 5"
						}
					]
				},
				{
					"name": "Delete Customer By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/customer/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"customer",
								"{user_id}"
							]
						},
						"description": "Delete the customer with the given user_id"
					},
					"response": [
						{
							"name": "Delete Customer",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/customer/33",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"customer",
										"33"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:36:18 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=33 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dish_Ingredient",
			"item": [
				{
					"name": "Get All Dish_Ingredient",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish_ingredient",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish_ingredient"
							]
						},
						"description": " List all dish_ingredients\r\n"
					},
					"response": [
						{
							"name": "Get All Dish_Ingredient",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:42:26 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 1,\n        \"ing_Name\": \"Chicken\"\n    },\n    {\n        \"dish_ID\": 1,\n        \"ing_Name\": \"Potato\"\n    },\n    {\n        \"dish_ID\": 2,\n        \"ing_Name\": \"Potato\"\n    },\n    {\n        \"dish_ID\": 2,\n        \"ing_Name\": \"Steak\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"ing_Name\": \"Potato\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"ing_Name\": \"Steak\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"ing_Name\": \"Broccoli\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"ing_Name\": \"Salmon\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"ing_Name\": \"Rice\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"ing_Name\": \"Lettuce\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"ing_Name\": \"Tomato\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"ing_Name\": \"Chicken\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"ing_Name\": \"BBQ Sauce\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"ing_Name\": \"Corn\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Bread\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Soy \"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Sweet Potato\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Tomato\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Lettuce\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"ing_Name\": \"Onion\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Quinoa\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Bread\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Potato\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Tomato\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Lettuce\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"ing_Name\": \"Olives\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"ing_Name\": \"Tomato\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"ing_Name\": \"Lettuce\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"ing_Name\": \"Onion\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"ing_Name\": \"Olives\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"ing_Name\": \"Bread\"\n    },\n    {\n        \"dish_ID\": 9,\n        \"ing_Name\": \"Tea\"\n    },\n    {\n        \"dish_ID\": 10,\n        \"ing_Name\": \"Water\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Dish_Ingredient Ingredient By Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish_ingredient/{dish_id}/{ingredient_name}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish_ingredient",
								"{dish_id}",
								"{ingredient_name}"
							]
						},
						"description": "List the dish_ingredient corresponding to the dish_id and ingredient_name"
					},
					"response": [
						{
							"name": "Get Dish_Ingredient Ingredient Name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient/1/Potato",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient",
										"1",
										"Potato"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:42:39 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"dish_ID\": 1,\n    \"ing_Name\": \"Potato\"\n}"
						}
					]
				},
				{
					"name": "Get Dish_Ingredient Number of Ingredients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish_ingredient/numIngredientsInDish/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish_ingredient",
								"numIngredientsInDish",
								"{dish_id}"
							]
						},
						"description": "List all ingredients in a dish that corresponds to the given dish_id"
					},
					"response": [
						{
							"name": "Get Dish_Ingredient Number of Ingredients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient/numIngredientsInDish/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient",
										"numIngredientsInDish",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:42:45 GMT"
								}
							],
							"cookie": [],
							"body": "The number of ingredients in dish = 1 is 2\n"
						}
					]
				},
				{
					"name": "Get Dish_Ingredient Ingredients Supplier",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish_ingredient/getIngredientsBySupplier/{supplier}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish_ingredient",
								"getIngredientsBySupplier",
								"{supplier}"
							]
						},
						"description": " List all ingredients provided by a supplier that corresponds to a given supplier id\r\n"
					},
					"response": [
						{
							"name": "Get Dish_Ingredient Ingredients Supplier",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient/getIngredientsBySupplier/Wyman-Osinski",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient",
										"getIngredientsBySupplier",
										"Wyman-Osinski"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:36:32 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    \"Potato\",\n    \"Steak\",\n    \"Tomato\",\n    \"Onion\",\n    \"Broccoli\",\n    \"Corn\"\n]"
						}
					]
				},
				{
					"name": "Create Dish_Ingredient",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dish_ID\": 1,\n        \"ing_Name\": \"Steak\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url;}}/api/dish_ingredient",
							"host": [
								"{{url;}}"
							],
							"path": [
								"api",
								"dish_ingredient"
							]
						},
						"description": " Create a new dish_ingredient"
					},
					"response": [
						{
							"name": "Create Dish_Ingredient",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"dish_ID\": 1,\r\n        \"ing_Name\": \"Steak\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:44:25 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Delete Dish_Ingredient By Name",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "https://localhost:44305/api/dish_ingredient/{dish_id}/{ingredient_name}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44305",
							"path": [
								"api",
								"dish_ingredient",
								"{dish_id}",
								"{ingredient_name}"
							]
						},
						"description": "Delete the dish_ingredient with the given order_id and ingredient_name"
					},
					"response": [
						{
							"name": "Delete Dish_Ingredient",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish_ingredient/1/Steak",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish_ingredient",
										"1",
										"Steak"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:37:01 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=1,Steak deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Dish",
			"item": [
				{
					"name": "Get All Dishes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish"
							]
						},
						"description": " List all dishes\r\n"
					},
					"response": [
						{
							"name": "Get All Dishes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:42:24 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 2,\n        \"available\": true,\n        \"price\": 147.86,\n        \"description\": \"9oz Ribeye and Mashed Potatoes\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"available\": true,\n        \"price\": 49.35,\n        \"description\": \"Salmon, Rice and Caesars Salad\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"available\": true,\n        \"price\": 90.56,\n        \"description\": \"Smoked Chicken and Corn\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"available\": true,\n        \"price\": 35.13,\n        \"description\": \"Vegetarian Burger (Soy) and Sweet Potato Fries\",\n        \"menu_Type\": \"Vegetarian\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"available\": true,\n        \"price\": 25.03,\n        \"description\": \"4 Veggie Panini (Tomato, Lettuce, Onions, Olives)\",\n        \"menu_Type\": \"Vegetarian\"\n    },\n    {\n        \"dish_ID\": 9,\n        \"available\": true,\n        \"price\": 7,\n        \"description\": \"Ice Tea\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 10,\n        \"available\": true,\n        \"price\": 3,\n        \"description\": \"Water\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 1,\n        \"available\": true,\n        \"price\": 43.38,\n        \"description\": \"Chicken Wings and Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 0,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 12,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 13,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Dish By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"{dish_id}"
							]
						},
						"description": "List the dish with the corresponding dish_id"
					},
					"response": [
						{
							"name": "Get Dish ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:44:38 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"dish_ID\": 1,\n    \"available\": true,\n    \"price\": 43.38,\n    \"description\": \"Chicken Wings and Fries\",\n    \"menu_Type\": \"Normal\"\n}"
						}
					]
				},
				{
					"name": "Dish Get Last Inserted",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/getLastInserted",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"getLastInserted"
							]
						},
						"description": "Get the dish_id of last inserted dish"
					},
					"response": [
						{
							"name": "Dish Get Last Inserted",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/getLastInserted",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"getLastInserted"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:54:31 GMT"
								}
							],
							"cookie": [],
							"body": "The last inserted dish has id=13\n"
						}
					]
				},
				{
					"name": "Get Dish Ingredients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/getIngredients/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"getIngredients",
								"{dish_id}"
							]
						},
						"description": "Get all ingredients of a dish based on the dish_id"
					},
					"response": [
						{
							"name": "Get Dish Ingredients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/getIngredients/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"getIngredients",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:41:06 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    \"Chicken\",\n    \"Potato\",\n    \"Steak\"\n]"
						}
					]
				},
				{
					"name": "Dish Get Available",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/getAvailable",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"getAvailable"
							]
						},
						"description": "Get all available dishes\r\n"
					},
					"response": [
						{
							"name": "Dish Get Available",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/getAvailable",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"getAvailable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:41:23 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 2,\n        \"available\": true,\n        \"price\": 147.86,\n        \"description\": \"9oz Ribeye and Mashed Potatoes\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"available\": true,\n        \"price\": 49.35,\n        \"description\": \"Salmon, Rice and Caesars Salad\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"available\": true,\n        \"price\": 90.56,\n        \"description\": \"Smoked Chicken and Corn\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 6,\n        \"available\": true,\n        \"price\": 35.13,\n        \"description\": \"Vegetarian Burger (Soy) and Sweet Potato Fries\",\n        \"menu_Type\": \"Vegetarian\"\n    },\n    {\n        \"dish_ID\": 8,\n        \"available\": true,\n        \"price\": 25.03,\n        \"description\": \"4 Veggie Panini (Tomato, Lettuce, Onions, Olives)\",\n        \"menu_Type\": \"Vegetarian\"\n    },\n    {\n        \"dish_ID\": 9,\n        \"available\": true,\n        \"price\": 7,\n        \"description\": \"Ice Tea\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 10,\n        \"available\": true,\n        \"price\": 3,\n        \"description\": \"Water\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 1,\n        \"available\": true,\n        \"price\": 43.38,\n        \"description\": \"Chicken Wings and Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 0,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 12,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create Dish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"available\": true,\n    \"price\": 20.15,\n    \"description\": \"Nacho Fries\",\n    \"menu_Type\": \"Normal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://localhost:44305/api/dish/{ingredient_name}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44305",
							"path": [
								"api",
								"dish",
								"{ingredient_name}"
							]
						},
						"description": "Create a new dish based on an ingredient. Ingredient must exist in the ingredient table\r\n"
					},
					"response": [
						{
							"name": "Create Dish",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"available\": true,\r\n    \"price\": 20.15,\r\n    \"description\": \"Nacho Fries\",\r\n    \"menu_Type\": \"Normal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/dish/Potato",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"Potato"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:55:42 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Dish Make Available",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/makeAvailable/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"makeAvailable",
								"{dish_id}"
							]
						},
						"description": "Make a dish available based on the given dish_id"
					},
					"response": [
						{
							"name": "Dish Make Available",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/makeAvailable/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"makeAvailable",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:47:25 GMT"
								}
							],
							"cookie": [],
							"body": "Dish is now available!\n"
						}
					]
				},
				{
					"name": "Dish Make Unavailable",
					"request": {
						"method": "PUT",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/makeUnavailable/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"makeUnavailable",
								"{dish_id}"
							]
						},
						"description": "Make a dish unavailable based on the given dish_id"
					},
					"response": [
						{
							"name": "Dish Make Unavailable",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/makeUnavailable/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"makeUnavailable",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:47:24 GMT"
								}
							],
							"cookie": [],
							"body": "Dish is now unavailable!\n"
						}
					]
				},
				{
					"name": "Update Dish",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"dish_ID\": {dish_id},\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/dish/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"{dish_id}"
							]
						},
						"description": "Update an existing dish based on the given dish_id"
					},
					"response": [
						{
							"name": "Update Dish",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"dish_ID\": 7,\r\n        \"available\": true,\r\n        \"price\": 141.39,\r\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\r\n        \"menu_Type\": \"Normal\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/dish/7",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:52:37 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=7 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Dish By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/dish/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"dish",
								"{dish_id}"
							]
						},
						"description": "Delete the dish with the given dish_id"
					},
					"response": [
						{
							"name": "Delete Dish",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/dish/13",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"dish",
										"13"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:42:52 GMT"
								},
								{
									"key": "Content-Length",
									"value": "185"
								}
							],
							"cookie": [],
							"body": "Record with key=13 and related records deleted succesfully due to database constraints\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Employee",
			"item": [
				{
					"name": "Get All Employees",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/employee",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"employee"
							]
						},
						"description": " List all employee\r\n"
					},
					"response": [
						{
							"name": "Get All Employees",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/employee",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"employee"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:42:18 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 1,\n        \"start_Date\": \"2018-07-03T00:00:00\",\n        \"job_Title\": \"Manager\",\n        \"salary\": 84343.41,\n        \"mgr_ID\": null\n    },\n    {\n        \"user_ID\": 2,\n        \"start_Date\": \"2019-07-22T00:00:00\",\n        \"job_Title\": \"Executive Chef\",\n        \"salary\": 47127.41,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 3,\n        \"start_Date\": \"2017-02-10T00:00:00\",\n        \"job_Title\": \"Sous Chef\",\n        \"salary\": 57714.91,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 4,\n        \"start_Date\": \"2017-05-14T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 50508.88,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 5,\n        \"start_Date\": \"2015-09-03T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 50883.29,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 6,\n        \"start_Date\": \"2015-01-25T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 49023.23,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 7,\n        \"start_Date\": \"2019-07-30T00:00:00\",\n        \"job_Title\": \"Cashier\",\n        \"salary\": 45985.14,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 8,\n        \"start_Date\": \"2016-07-01T00:00:00\",\n        \"job_Title\": \"Cashier\",\n        \"salary\": 50958.16,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 9,\n        \"start_Date\": \"2016-08-27T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 58853.1,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 10,\n        \"start_Date\": \"2016-08-15T00:00:00\",\n        \"job_Title\": \"Waitress\",\n        \"salary\": 52341.73,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 11,\n        \"start_Date\": \"2015-08-06T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 55031.62,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 12,\n        \"start_Date\": \"2018-03-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 56662.62,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 13,\n        \"start_Date\": \"2019-07-13T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 55639.42,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 14,\n        \"start_Date\": \"2018-12-14T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 50343.83,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 15,\n        \"start_Date\": \"2017-11-01T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 47472.01,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 16,\n        \"start_Date\": \"2018-01-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 44882.49,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 31,\n        \"start_Date\": \"2020-12-06T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 4500,\n        \"mgr_ID\": null\n    },\n    {\n        \"user_ID\": 36,\n        \"start_Date\": \"2020-12-06T00:00:00\",\n        \"job_Title\": \"Manager\",\n        \"salary\": 4500,\n        \"mgr_ID\": null\n    },\n    {\n        \"user_ID\": 37,\n        \"start_Date\": \"2020-12-06T00:00:00\",\n        \"job_Title\": \"Manager\",\n        \"salary\": 4500,\n        \"mgr_ID\": null\n    }\n]"
						}
					]
				},
				{
					"name": "Get Employee By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/employee/{user_ID}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"employee",
								"{user_ID}"
							]
						},
						"description": " List the employee corresponding to the employee id\r\n"
					},
					"response": [
						{
							"name": "Get Employee ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/employee/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"employee",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:32:40 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 1,\n    \"start_Date\": \"2018-07-03T00:00:00\",\n    \"job_Title\": \"Manager\",\n    \"salary\": 84343.41,\n    \"mgr_ID\": null\n}"
						}
					]
				},
				{
					"name": "Get Employee Manager",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/employee/{manager_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"employee",
								"{manager_id}"
							]
						},
						"description": "Get employees managed by a certain manager\r\n"
					},
					"response": [
						{
							"name": "Get Employee Manager",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/employee/getManagedBy/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"employee",
										"getManagedBy",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:53:12 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 2,\n        \"start_Date\": \"2019-07-22T00:00:00\",\n        \"job_Title\": \"Executive Chef\",\n        \"salary\": 47127.41,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 3,\n        \"start_Date\": \"2017-02-10T00:00:00\",\n        \"job_Title\": \"Sous Chef\",\n        \"salary\": 57714.91,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 4,\n        \"start_Date\": \"2017-05-14T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 50508.88,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 5,\n        \"start_Date\": \"2015-09-03T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 50883.29,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 6,\n        \"start_Date\": \"2015-01-25T00:00:00\",\n        \"job_Title\": \"Cook\",\n        \"salary\": 49023.23,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 7,\n        \"start_Date\": \"2019-07-30T00:00:00\",\n        \"job_Title\": \"Cashier\",\n        \"salary\": 45985.14,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 8,\n        \"start_Date\": \"2016-07-01T00:00:00\",\n        \"job_Title\": \"Cashier\",\n        \"salary\": 50958.16,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 9,\n        \"start_Date\": \"2016-08-27T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 58853.1,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 10,\n        \"start_Date\": \"2016-08-15T00:00:00\",\n        \"job_Title\": \"Waitress\",\n        \"salary\": 52341.73,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 11,\n        \"start_Date\": \"2015-08-06T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 55031.62,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 12,\n        \"start_Date\": \"2018-03-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 56662.62,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 13,\n        \"start_Date\": \"2019-07-13T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 55639.42,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 14,\n        \"start_Date\": \"2018-12-14T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 50343.83,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 15,\n        \"start_Date\": \"2017-11-01T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 47472.01,\n        \"mgr_ID\": 1\n    },\n    {\n        \"user_ID\": 16,\n        \"start_Date\": \"2018-01-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 44882.49,\n        \"mgr_ID\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Update Employee",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"user_ID\": 16,\n        \"start_Date\": \"2018-01-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 40000.00,\n        \"mgr_ID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/employee/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"employee",
								"{user_id}"
							]
						},
						"description": "Updates the employee with the given user_id"
					},
					"response": [
						{
							"name": "Update Employee",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n        \"user_ID\": 16,\n        \"start_Date\": \"2018-01-25T00:00:00\",\n        \"job_Title\": \"Waiter\",\n        \"salary\": 40000.00,\n        \"mgr_ID\": 1\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:5001/api/employee/16",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"employee",
										"16"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "Record with key=16 was updated succesfully"
						}
					]
				},
				{
					"name": "Delete Employee By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/employee/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"employee",
								"{user_id}"
							]
						},
						"description": "Delete the employee with the given user_id"
					},
					"response": [
						{
							"name": "Delete Employee",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/employee/31",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"employee",
										"31"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:42:37 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=31 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "In_Store_Order",
			"item": [
				{
					"name": "Get All In_Store_Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/in_store_order",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order"
							]
						},
						"description": "List all in_store_order\r\n"
					},
					"response": [
						{
							"name": "Get All In Store Orders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/in_store_order",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:53:19 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 6,\n        \"tableNo\": 1\n    },\n    {\n        \"order_ID\": 7,\n        \"tableNo\": 2\n    },\n    {\n        \"order_ID\": 8,\n        \"tableNo\": 3\n    },\n    {\n        \"order_ID\": 9,\n        \"tableNo\": 4\n    },\n    {\n        \"order_ID\": 10,\n        \"tableNo\": 5\n    },\n    {\n        \"order_ID\": 11,\n        \"tableNo\": 6\n    },\n    {\n        \"order_ID\": 12,\n        \"tableNo\": 7\n    },\n    {\n        \"order_ID\": 13,\n        \"tableNo\": 8\n    },\n    {\n        \"order_ID\": 14,\n        \"tableNo\": 9\n    },\n    {\n        \"order_ID\": 15,\n        \"tableNo\": 10\n    }\n]"
						}
					]
				},
				{
					"name": "Get In_Store_Order By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/in_store_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order",
								"{order_id}"
							]
						},
						"description": "List the in_store_order corresponding to the order_id"
					},
					"response": [
						{
							"name": "Get In Store Order ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/in_store_order/6",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:53:26 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"order_ID\": 6,\n    \"tableNo\": 1\n}"
						}
					]
				},
				{
					"name": "Get In_Store_Order By Waiter",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/in_store_order/getOrdersByWaiter/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order",
								"getOrdersByWaiter",
								"{user_id}"
							]
						},
						"description": "List all in store orders taken by a certain waiter with user_id"
					},
					"response": [
						{
							"name": "Get In Store Order By Waiter",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/in_store_order/getOrdersByWaiter/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order",
										"getOrdersByWaiter",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:53:38 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 6,\n        \"tableNo\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Get In_Store_Order By Table",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/in_store_order/getOrdersByTable/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order",
								"getOrdersByTable",
								"{tableno}"
							]
						},
						"description": "Get all in_store_orders that were received from a certain table"
					},
					"response": [
						{
							"name": "Get In Store Orders By Table",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/in_store_order/getOrdersByTable/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order",
										"getOrdersByTable",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:53:44 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 6,\n        \"tableNo\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Update In_Store_Order",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"order_ID\": {order_id},\n        \"tableNo\": 2\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/in_store_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order",
								"{order_id}"
							]
						},
						"description": "Updates an in-store order based on an order_id"
					},
					"response": [
						{
							"name": "Update In Store Order",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"order_ID\": 7,\r\n        \"tableNo\": 2\r\n    }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/in_store_order/7",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 20:54:34 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=7 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete In_Store_Order By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/in_store_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"in_store_order",
								"{order_id}"
							]
						},
						"description": "Delete the in_store_order with the given order_id"
					},
					"response": [
						{
							"name": "Delete In Store Order",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/in_store_order/7",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"in_store_order",
										"7"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:44:51 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=7 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ingredient_Supplier",
			"item": [
				{
					"name": "Get All Ingredient_Supplier",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient_supplier",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient_supplier"
							]
						},
						"description": "List all ingredient_suppliers\r\n"
					},
					"response": [
						{
							"name": "Get All Ingredient Suppliers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient_supplier",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient_supplier"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:08:37 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Potato\"\n    },\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Steak\"\n    },\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Tomato\"\n    },\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Onion\"\n    },\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Broccoli\"\n    },\n    {\n        \"supplier\": \"Waelchi LLC\",\n        \"ing_Name\": \"Salmon\"\n    },\n    {\n        \"supplier\": \"Waelchi LLC\",\n        \"ing_Name\": \"Chicken\"\n    },\n    {\n        \"supplier\": \"Waelchi LLC\",\n        \"ing_Name\": \"Sweet Potato\"\n    },\n    {\n        \"supplier\": \"Anderson-Medhurst\",\n        \"ing_Name\": \"BBQ Sauce\"\n    },\n    {\n        \"supplier\": \"Anderson-Medhurst\",\n        \"ing_Name\": \"Hot Sauce\"\n    },\n    {\n        \"supplier\": \"Wyman-Osinski\",\n        \"ing_Name\": \"Corn\"\n    },\n    {\n        \"supplier\": \"Anderson-Medhurst\",\n        \"ing_Name\": \"Quinoa\"\n    },\n    {\n        \"supplier\": \"Anderson-Medhurst\",\n        \"ing_Name\": \"Soy \"\n    },\n    {\n        \"supplier\": \"Waelchi LLC\",\n        \"ing_Name\": \"Lettuce\"\n    },\n    {\n        \"supplier\": \"Waelchi LLC\",\n        \"ing_Name\": \"Olives\"\n    },\n    {\n        \"supplier\": \"Michael\",\n        \"ing_Name\": \"Rice\"\n    },\n    {\n        \"supplier\": \"Michael\",\n        \"ing_Name\": \"Bread\"\n    },\n    {\n        \"supplier\": \"Michael\",\n        \"ing_Name\": \"Tea\"\n    },\n    {\n        \"supplier\": \"Michael\",\n        \"ing_Name\": \"Water\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Ingredient_Supplier By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://localhost:44305/api/ingredient_supplier/{ingredient_name}/{supplier}",
							"protocol": "https",
							"host": [
								"localhost"
							],
							"port": "44305",
							"path": [
								"api",
								"ingredient_supplier",
								"{ingredient_name}",
								"{supplier}"
							]
						},
						"description": "List the ingredient_supplier corresponding to the ingredient and supplier name"
					},
					"response": [
						{
							"name": "Get Ingredient Supplier ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient_supplier/Potato/Wyman-Osinski",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient_supplier",
										"Potato",
										"Wyman-Osinski"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:08:52 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"supplier\": \"Wyman-Osinski\",\n    \"ing_Name\": \"Potato\"\n}"
						}
					]
				},
				{
					"name": "Get Number of Suppliers for Ingredient",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient_supplier/getNumSuppliers/{ingredient_name}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient_supplier",
								"getNumSuppliers",
								"{ingredient_name}"
							]
						},
						"description": "Get the number of suppliers for a specific ingredient"
					},
					"response": [
						{
							"name": "Get Number of Suppliers for Ingredient",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient_supplier/getNumSuppliers/Potato",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient_supplier",
										"getNumSuppliers",
										"Potato"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 21:13:18 GMT"
								}
							],
							"cookie": [],
							"body": "The number of suppliers for Potato is 1\n"
						}
					]
				},
				{
					"name": "Create New Ingredient_Supplier",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"supplier\": \"Frank\",\n    \"ing_Name\": \"Bread\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ingredient_supplier/",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient_supplier",
								""
							]
						},
						"description": " Create a new ingredient_supplier"
					},
					"response": [
						{
							"name": "Create New Ingredient Supplier",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "    {\r\n        \"supplier\": \"Frank\",\r\n        \"ing_Name\": \"Bread\"\r\n    }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/ingredient_supplier/",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient_supplier",
										""
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:22:36 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Delete Ingredient Supplier",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient_supplier/{ingredient_name}/{supplier}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient_supplier",
								"{ingredient_name}",
								"{supplier}"
							]
						},
						"description": "Delete the ingredient_supplier with the given ingredient and supplier names"
					},
					"response": [
						{
							"name": "Delete Ingredient Supplier",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient_supplier/Bread/Frank",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient_supplier",
										"Bread",
										"Frank"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:22:47 GMT"
								},
								{
									"key": "Content-Length",
									"value": "187"
								}
							],
							"cookie": [],
							"body": "Record in the Ingredient Supplier table with key=Bread,Frank deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Ingredient",
			"item": [
				{
					"name": "Get All Ingredients",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient"
							]
						},
						"description": "List all ingredients"
					},
					"response": [
						{
							"name": "Get All Ingredients",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:05 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"name\": \"Steak\",\n        \"price\": 3116.05,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 56.32\n    },\n    {\n        \"name\": \"Tomato\",\n        \"price\": 140.98,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 5.94\n    },\n    {\n        \"name\": \"Onion\",\n        \"price\": 155.35,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 5.23\n    },\n    {\n        \"name\": \"Broccoli\",\n        \"price\": 502.04,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 10.34\n    },\n    {\n        \"name\": \"Salmon\",\n        \"price\": 186.33,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 12.21\n    },\n    {\n        \"name\": \"Chicken\",\n        \"price\": 158.94,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 35.87\n    },\n    {\n        \"name\": \"Sweet Potato\",\n        \"price\": 150.43,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 15.98\n    },\n    {\n        \"name\": \"BBQ Sauce\",\n        \"price\": 302.86,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 9\n    },\n    {\n        \"name\": \"Hot Sauce\",\n        \"price\": 100.88,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 2\n    },\n    {\n        \"name\": \"Corn\",\n        \"price\": 50.05,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 2\n    },\n    {\n        \"name\": \"Quinoa\",\n        \"price\": 186.33,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 5\n    },\n    {\n        \"name\": \"Soy \",\n        \"price\": 156.33,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 5\n    },\n    {\n        \"name\": \"Lettuce\",\n        \"price\": 50,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 3.5\n    },\n    {\n        \"name\": \"Olives\",\n        \"price\": 25,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 1\n    },\n    {\n        \"name\": \"Rice\",\n        \"price\": 150.23,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 20.43\n    },\n    {\n        \"name\": \"Bread\",\n        \"price\": 200,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 15\n    },\n    {\n        \"name\": \"Tea\",\n        \"price\": 60.43,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 5\n    },\n    {\n        \"name\": \"Water\",\n        \"price\": 65.04,\n        \"exp_Date\": \"2050-12-31T00:00:00\",\n        \"quantity\": 30\n    },\n    {\n        \"name\": \"Potato\",\n        \"price\": 545.09,\n        \"exp_Date\": \"2020-12-31T00:00:00\",\n        \"quantity\": 100\n    }\n]"
						}
					]
				},
				{
					"name": "Get Ingredient By Name",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient/{ingredient_name}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient",
								"{ingredient_name}"
							]
						},
						"description": "List the ingredient corresponding to the ingredient_name"
					},
					"response": [
						{
							"name": "Get Ingredient By Name",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient/Potato",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient",
										"Potato"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:09 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"name\": \"Potato\",\n    \"price\": 545.09,\n    \"exp_Date\": \"2020-12-31T00:00:00\",\n    \"quantity\": 100\n}"
						}
					]
				},
				{
					"name": "Create New Ingredient ",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Noodles\",\n    \"price\": 625.09,\n    \"exp_Date\": \"2020-11-12T00:00:00\",\n    \"quantity\": 50.00\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ingredient",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient"
							]
						},
						"description": " Create a new ingredient\r\n"
					},
					"response": [
						{
							"name": "Create New Ingredient ",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": " {\r\n    \"name\": \"Noodles\",\r\n    \"price\": 625.09,\r\n    \"exp_Date\": \"2020-11-12T00:00:00\",\r\n    \"quantity\": 50.00\r\n    }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/ingredient",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:23:07 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Update Ingredient",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": {ingredient_name},\n    \"price\": 545.09,\n    \"exp_Date\": \"2020-12-31T00:00:00\",\n    \"quantity\": 100.00\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/ingredient/{ingredient_name}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient",
								"{ingredient_name}"
							]
						},
						"description": "Update an ingredient based on the ingredient name\r\n"
					},
					"response": [
						{
							"name": "Update Ingredient",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Potato\",\r\n    \"price\": 545.09,\r\n    \"exp_Date\": \"2020-12-31T00:00:00\",\r\n    \"quantity\": 100.00\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/ingredient/Potato",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient",
										"Potato"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:23:21 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=Potato was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Ingredient By Name",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/ingredient/{ingredient_name}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ingredient",
								"{ingredient_name}"
							]
						},
						"description": "Delete the ingredient with the given ingredient name\r\n"
					},
					"response": [
						{
							"name": "Delete Ingredient",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/ingredient/Noodles",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"ingredient",
										"Noodles"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:23:29 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=Noodles deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Manager",
			"item": [
				{
					"name": "Get All Managers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/manager",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"manager"
							]
						},
						"description": "List all managers\r\n"
					},
					"response": [
						{
							"name": "Get All Managers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/manager",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"manager"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:25:54 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 36,\n        \"area\": \"\"\n    },\n    {\n        \"user_ID\": 1,\n        \"area\": \"Kitchen\"\n    },\n    {\n        \"user_ID\": 37,\n        \"area\": \"\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Manager By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/manager/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"manager",
								"{user_id}"
							]
						},
						"description": "List the manager corresponding to the given user_id"
					},
					"response": [
						{
							"name": "Get Manager ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/manager/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"manager",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:20 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 1,\n    \"area\": \"Kitchen\"\n}"
						}
					]
				},
				{
					"name": "Get Number of Managers",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/manager/getNumberManagers",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"manager",
								"getNumberManagers"
							]
						},
						"description": "Get the number of managers\r\n"
					},
					"response": [
						{
							"name": "Get Number of Managers",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/manager/getNumberManagers",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"manager",
										"getNumberManagers"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:24 GMT"
								}
							],
							"cookie": [],
							"body": "There are 2 manager(s)\n"
						}
					]
				},
				{
					"name": "Update Manager",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"user_ID\": {user_id},\n        \"area\": \"Kitchen\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/manager/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"manager",
								"{user_id}"
							]
						},
						"description": "Update a manager based on the given user_id"
					},
					"response": [
						{
							"name": "Update Manager",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"user_ID\": 1,\r\n        \"area\": \"Kitchen\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/manager/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"manager",
										"1"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:24:48 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=1 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Manager By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/manager/{user_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"manager",
								"{user_id}"
							]
						},
						"description": "Delete the manager with the given user_id\r\n"
					},
					"response": [
						{
							"name": "Delete Manager",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/manager/41",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"manager",
										"41"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 23:00:30 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=41 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Menu",
			"item": [
				{
					"name": "Get All Menus",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/menu",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu"
							]
						},
						"description": " List all menus"
					},
					"response": [
						{
							"name": "Get All Menus",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/menu",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:28 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"type\": \"Normal\",\n        \"available\": true\n    },\n    {\n        \"type\": \"Vegetarian\",\n        \"available\": true\n    }\n]"
						}
					]
				},
				{
					"name": "Get Menu By Type",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/menu/{menu_type}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu",
								"{menu_type}"
							]
						},
						"description": "List the menu corresponding to the given menu type\r\n"
					},
					"response": [
						{
							"name": "Get Menu Type",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/menu/Normal",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu",
										"Normal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:34 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"Normal\",\n    \"available\": true\n}"
						}
					]
				},
				{
					"name": "Get Menu Dishes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/menu/getDishes/{menu_type}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu",
								"getDishes",
								"{menu_type}"
							]
						},
						"description": "List the dishes in a menu that corresponds to the given menu type\r\n"
					},
					"response": [
						{
							"name": "Get Menu Dishes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/menu/getDishes/Normal",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu",
										"getDishes",
										"Normal"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:40 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 2,\n        \"available\": true,\n        \"price\": 147.86,\n        \"description\": \"9oz Ribeye and Mashed Potatoes\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 3,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 4,\n        \"available\": true,\n        \"price\": 49.35,\n        \"description\": \"Salmon, Rice and Caesars Salad\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 5,\n        \"available\": true,\n        \"price\": 90.56,\n        \"description\": \"Smoked Chicken and Corn\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 9,\n        \"available\": true,\n        \"price\": 7,\n        \"description\": \"Ice Tea\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 10,\n        \"available\": true,\n        \"price\": 3,\n        \"description\": \"Water\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 1,\n        \"available\": true,\n        \"price\": 43.38,\n        \"description\": \"Chicken Wings and Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 7,\n        \"available\": true,\n        \"price\": 141.39,\n        \"description\": \"24oz Ribeye, Mashed Potatoes, and Broccoli\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 0,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 12,\n        \"available\": true,\n        \"price\": 20.15,\n        \"description\": \"Nacho Fries\",\n        \"menu_Type\": \"Normal\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Available Menus",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/menu/getAvailable",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu",
								"getAvailable"
							]
						},
						"description": "List all available menus"
					},
					"response": [
						{
							"name": "Get Available Menus",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/menu/getAvailable",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu",
										"getAvailable"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:42 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"type\": \"Normal\",\n        \"available\": true\n    },\n    {\n        \"type\": \"Vegetarian\",\n        \"available\": true\n    }\n]"
						}
					]
				},
				{
					"name": "Create New Menu",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"type\": \"Breakfast\",\n        \"available\": true\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/menu",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu"
							]
						},
						"description": "Create a new menu\r\n"
					},
					"response": [
						{
							"name": "Create New Menu",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"type\": \"Breakfast\",\r\n        \"available\": true\r\n    }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/menu",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:26:27 GMT"
								},
								{
									"key": "Content-Length",
									"value": "143"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Update Menu",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"type\": {menu_type},\n    \"available\": false\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/menu/{menu_type}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"menu",
								"{menu_type}"
							]
						},
						"description": "Update a menu based on the menu type\r\n"
					},
					"response": [
						{
							"name": "Update Menu",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"type\": \"Breakfast\",\r\n    \"available\": false\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/menu/Breakfast",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu",
										"Breakfast"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:26:59 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=Breakfast was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Menu By Type",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{api}}/api/menu/{menu_type}",
							"host": [
								"{{api}}"
							],
							"path": [
								"api",
								"menu",
								"{menu_type}"
							]
						},
						"description": "Delete the menu with the given type"
					},
					"response": [
						{
							"name": "Delete Menu",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/menu/Breakfast",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"menu",
										"Breakfast"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:27:05 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=Breakfast deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Online_Order",
			"item": [
				{
					"name": "Get All Online_Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{api}}/api/online_order",
							"host": [
								"{{api}}"
							],
							"path": [
								"api",
								"online_order"
							]
						},
						"description": "List all online_order"
					},
					"response": [
						{
							"name": "Get All Online Orders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/online_order",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"online_order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:49 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 2,\n        \"application\": \"Zontrax\"\n    },\n    {\n        \"order_ID\": 3,\n        \"application\": \"Zontrax\"\n    },\n    {\n        \"order_ID\": 5,\n        \"application\": \"Domainer\"\n    },\n    {\n        \"order_ID\": 17,\n        \"application\": \"Zontrax\\\"\"\n    },\n    {\n        \"order_ID\": 18,\n        \"application\": \"Zontrax\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Online_Order ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/online_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"online_order",
								"{order_id}"
							]
						},
						"description": "List the online_orders corresponding to the order_id"
					},
					"response": [
						{
							"name": "Get Online Order ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/online_order/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"online_order",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:09:57 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"order_ID\": 2,\n    \"application\": \"Zontrax\"\n}"
						}
					]
				},
				{
					"name": "Update Online_Order",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"order_ID\": {order_id},\n    \"application\": \"Ubereats\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/online_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"online_order",
								"{order_id}"
							]
						},
						"description": "Updates an online order based on an order id"
					},
					"response": [
						{
							"name": "Update Online Order",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"order_ID\": 2,\r\n    \"application\": \"Ubereats\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/online_order/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"online_order",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:27:46 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=2 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Online_Order By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/online_order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"online_order",
								"{order_id}"
							]
						},
						"description": "Delete the online_order with the given order_id"
					},
					"response": [
						{
							"name": "Delete Online Order",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/online_order/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"online_order",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:35:35 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=2 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order_Dish",
			"item": [
				{
					"name": "Get All Order_Dish",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order_dish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish"
							]
						},
						"description": " List all order_dishes"
					},
					"response": [
						{
							"name": "Get All Order Dishes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order_dish",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:10:04 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 2\n    },\n    {\n        \"dish_ID\": 1,\n        \"order_ID\": 2\n    },\n    {\n        \"dish_ID\": 1,\n        \"order_ID\": 3\n    },\n    {\n        \"dish_ID\": 8,\n        \"order_ID\": 5\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 5\n    },\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 6\n    },\n    {\n        \"dish_ID\": 1,\n        \"order_ID\": 8\n    },\n    {\n        \"dish_ID\": 2,\n        \"order_ID\": 8\n    },\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 8\n    },\n    {\n        \"dish_ID\": 5,\n        \"order_ID\": 9\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 9\n    },\n    {\n        \"dish_ID\": 5,\n        \"order_ID\": 10\n    },\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 10\n    },\n    {\n        \"dish_ID\": 1,\n        \"order_ID\": 11\n    },\n    {\n        \"dish_ID\": 2,\n        \"order_ID\": 11\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 11\n    },\n    {\n        \"dish_ID\": 8,\n        \"order_ID\": 12\n    },\n    {\n        \"dish_ID\": 7,\n        \"order_ID\": 12\n    },\n    {\n        \"dish_ID\": 6,\n        \"order_ID\": 12\n    },\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 12\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 13\n    },\n    {\n        \"dish_ID\": 1,\n        \"order_ID\": 14\n    },\n    {\n        \"dish_ID\": 2,\n        \"order_ID\": 14\n    },\n    {\n        \"dish_ID\": 4,\n        \"order_ID\": 14\n    },\n    {\n        \"dish_ID\": 5,\n        \"order_ID\": 14\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 14\n    },\n    {\n        \"dish_ID\": 6,\n        \"order_ID\": 15\n    },\n    {\n        \"dish_ID\": 10,\n        \"order_ID\": 15\n    },\n    {\n        \"dish_ID\": 9,\n        \"order_ID\": 16\n    },\n    {\n        \"dish_ID\": 2,\n        \"order_ID\": 17\n    },\n    {\n        \"dish_ID\": 2,\n        \"order_ID\": 18\n    }\n]"
						}
					]
				},
				{
					"name": "Get Order_Dish By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order_dish/{order_id}/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish",
								"{order_id}",
								"{dish_id}"
							]
						},
						"description": "List the order_dish corresponding to the order and dish id\r\n"
					},
					"response": [
						{
							"name": "Get Order Dish ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order_dish/2/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish",
										"2",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:10:24 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"dish_ID\": 10,\n    \"order_ID\": 2\n}"
						}
					]
				},
				{
					"name": "Get Number Dishes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order_dish/getNumDishes/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish",
								"getNumDishes",
								"{order_id}"
							]
						},
						"description": "Get the number of dishes in a specific order"
					},
					"response": [
						{
							"name": "Get Number Dishes",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order_dish/getNumDishes/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish",
										"getNumDishes",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:10:30 GMT"
								}
							],
							"cookie": [],
							"body": "The number of dishes in order=10 is 2\n"
						}
					]
				},
				{
					"name": "Get Order List",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order_dish/getOrderList/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish",
								"getOrderList",
								"{dish_id}"
							]
						},
						"description": " Get all orders containing the specified dish\r\n"
					},
					"response": [
						{
							"name": "Get Order List",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order_dish/getOrderList/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish",
										"getOrderList",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:10:36 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 2,\n        \"user_ID\": 17,\n        \"transaction_ID\": 2,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 6,\n        \"user_ID\": 24,\n        \"transaction_ID\": 6,\n        \"date_Time\": \"2019-07-13T22:30:00\"\n    },\n    {\n        \"order_ID\": 8,\n        \"user_ID\": 27,\n        \"transaction_ID\": 8,\n        \"date_Time\": \"2020-06-23T20:48:00\"\n    },\n    {\n        \"order_ID\": 10,\n        \"user_ID\": 23,\n        \"transaction_ID\": 10,\n        \"date_Time\": \"2020-01-23T21:37:00\"\n    },\n    {\n        \"order_ID\": 12,\n        \"user_ID\": 21,\n        \"transaction_ID\": 12,\n        \"date_Time\": \"2015-05-19T18:54:00\"\n    },\n    {\n        \"order_ID\": 15,\n        \"user_ID\": 19,\n        \"transaction_ID\": 15,\n        \"date_Time\": \"2020-06-08T18:34:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create Order_Dish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"dish_ID\": 6,\n    \"order_ID\": 2\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order_dish",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish"
							]
						},
						"description": "Create a new order dish. Order and Dish must exist"
					},
					"response": [
						{
							"name": "Create Order Dish",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"dish_ID\": 6,\r\n        \"order_ID\": 2\r\n    }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/order_dish",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:29:59 GMT"
								},
								{
									"key": "Content-Length",
									"value": "143"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Delete Order_Dish",
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order_dish/{order_id}/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order_dish",
								"{order_id}",
								"{dish_id}"
							]
						},
						"description": "Delete the order_dish with the given id"
					},
					"response": [
						{
							"name": "Delete Order Dish",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order_dish/2/6",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order_dish",
										"2",
										"6"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:30:11 GMT"
								}
							],
							"cookie": [],
							"body": "Record in the Order_Dish table with key=(Dish_ID=6,Order_ID=2) deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order"
							]
						},
						"description": "List all orders\r\n"
					},
					"response": [
						{
							"name": "Get All Orders",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:31:14 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"order_ID\": 2,\n        \"user_ID\": 17,\n        \"transaction_ID\": 2,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 3,\n        \"user_ID\": 20,\n        \"transaction_ID\": 3,\n        \"date_Time\": \"2020-05-27T22:36:00\"\n    },\n    {\n        \"order_ID\": 5,\n        \"user_ID\": 18,\n        \"transaction_ID\": 5,\n        \"date_Time\": \"2016-03-06T22:05:00\"\n    },\n    {\n        \"order_ID\": 6,\n        \"user_ID\": 24,\n        \"transaction_ID\": 6,\n        \"date_Time\": \"2019-07-13T22:30:00\"\n    },\n    {\n        \"order_ID\": 8,\n        \"user_ID\": 27,\n        \"transaction_ID\": 8,\n        \"date_Time\": \"2020-06-23T20:48:00\"\n    },\n    {\n        \"order_ID\": 9,\n        \"user_ID\": 25,\n        \"transaction_ID\": 9,\n        \"date_Time\": \"2020-05-20T21:57:00\"\n    },\n    {\n        \"order_ID\": 10,\n        \"user_ID\": 23,\n        \"transaction_ID\": 10,\n        \"date_Time\": \"2020-01-23T21:37:00\"\n    },\n    {\n        \"order_ID\": 11,\n        \"user_ID\": 26,\n        \"transaction_ID\": 11,\n        \"date_Time\": \"2017-03-10T20:12:00\"\n    },\n    {\n        \"order_ID\": 12,\n        \"user_ID\": 21,\n        \"transaction_ID\": 12,\n        \"date_Time\": \"2015-05-19T18:54:00\"\n    },\n    {\n        \"order_ID\": 13,\n        \"user_ID\": 30,\n        \"transaction_ID\": 13,\n        \"date_Time\": \"2015-06-16T21:15:00\"\n    },\n    {\n        \"order_ID\": 14,\n        \"user_ID\": 24,\n        \"transaction_ID\": 14,\n        \"date_Time\": \"2019-01-02T20:47:00\"\n    },\n    {\n        \"order_ID\": 16,\n        \"user_ID\": 19,\n        \"transaction_ID\": 17,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 17,\n        \"user_ID\": 19,\n        \"transaction_ID\": 18,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 18,\n        \"user_ID\": 19,\n        \"transaction_ID\": 19,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 19,\n        \"user_ID\": 19,\n        \"transaction_ID\": 20,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 20,\n        \"user_ID\": 17,\n        \"transaction_ID\": 21,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"order_ID\": 21,\n        \"user_ID\": 19,\n        \"transaction_ID\": 22,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Order By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"{order_id}"
							]
						},
						"description": "List the order corresponding to the order_id"
					},
					"response": [
						{
							"name": "Get Order ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/2",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"2"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:10:47 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"order_ID\": 2,\n    \"user_ID\": 17,\n    \"transaction_ID\": 2,\n    \"date_Time\": \"2019-01-11T22:01:00\"\n}"
						}
					]
				},
				{
					"name": "Get Last Inserted Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/getLastInserted",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"getLastInserted"
							]
						},
						"description": "Get the last inserted order\r\n"
					},
					"response": [
						{
							"name": "Get Last Inserted Order",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/getLastInserted",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"getLastInserted"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:43:15 GMT"
								}
							],
							"cookie": [],
							"body": "The id of the order last inserted order is 20\n"
						}
					]
				},
				{
					"name": "Get Number of Orders By Transaction",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"{transaction_id}"
							]
						},
						"description": "Get the number of orders on a specific transaction\r\n"
					},
					"response": [
						{
							"name": "Get Number of Orders Per Transaction",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:43:27 GMT"
								}
							],
							"cookie": [],
							"body": "\"The number of orders for transaction with id=10 is/are 5\\n\""
						}
					]
				},
				{
					"name": "Get Order Cost ",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/getCost/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"getCost",
								"{order_id}"
							]
						},
						"description": "Get the total cost (in dollars) of an order based on an order_id"
					},
					"response": [
						{
							"name": "Get Order Cost ",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/getCost/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"getCost",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:11:04 GMT"
								}
							],
							"cookie": [],
							"body": "The order with id=10 costs 93.56\n"
						}
					]
				},
				{
					"name": "Get Dishes in Order",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/getDishes/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"getDishes",
								"{order_id}"
							]
						},
						"description": "Get the all dishes from an order\r\n"
					},
					"response": [
						{
							"name": "Get Dishes in Order",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/getDishes/10",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"getDishes",
										"10"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:11:09 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"dish_ID\": 5,\n        \"available\": true,\n        \"price\": 90.56,\n        \"description\": \"Smoked Chicken and Corn\",\n        \"menu_Type\": \"Normal\"\n    },\n    {\n        \"dish_ID\": 10,\n        \"available\": true,\n        \"price\": 3,\n        \"description\": \"Water\",\n        \"menu_Type\": \"Normal\"\n    }\n]"
						}
					]
				},
				{
					"name": "Create New In_Store_Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"user_ID\": 19,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order/in_store/{tableno}/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"in_store",
								"{tableno}",
								"{dish_id}"
							]
						},
						"description": "Create a new in_store_order based on a table number and dish_id"
					},
					"response": [
						{
							"name": "Create New In Store Order",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"user_ID\": 19,\r\n        \"date_Time\": \"2019-01-11T22:01:00\"\r\n    }\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/order/in_store/1/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"in_store",
										"1",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:48:29 GMT"
								}
							],
							"cookie": [],
							"body": "Records inserted successfully in the Order, In_Store_Order, Transaction, and Order_Dish Tables"
						}
					]
				},
				{
					"name": "Create New Online_Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": 19,\n    \"date_Time\": \"2019-01-11T22:01:00\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order/online/{application}/{dish_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"online",
								"{application}",
								"{dish_id}"
							]
						},
						"description": "Create a new online order based on an app name and dish_id"
					},
					"response": [
						{
							"name": "Create New Online Order",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"user_ID\": 19,\r\n        \"date_Time\": \"2019-01-11T22:01:00\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/order/online/1/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"online",
										"1",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:31:09 GMT"
								}
							],
							"cookie": [],
							"body": "Records inserted successfully in the Order, Online_Order, Transaction, and Order_Dish Tables"
						}
					]
				},
				{
					"name": "Create New In_Store_Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"user_ID\": 20,\n        \"date_Time\": \"2020-05-27T22:36:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order/in_store/{tableno}/{dish_id}/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"in_store",
								"{tableno}",
								"{dish_id}",
								"{transaction_id}"
							]
						},
						"description": "Create a new in_store_order based on a table number,  dish_id, and transaction_id"
					},
					"response": [
						{
							"name": "Create New In_Store_Order",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"name": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_ID\": 20,\n    \"date_Time\": \"2020-05-27T22:36:00\"\n}\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:5001/api/order/in_store/1/9/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"order",
										"in_store",
										"1",
										"9",
										"1"
									]
								}
							},
							"_postman_previewlanguage": "json",
							"header": null,
							"cookie": [],
							"body": "Records inserted successfully in the Order, In_Store_Order, and Order_Dish tables"
						}
					]
				},
				{
					"name": "Create New Online_Order",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": 20,\n    \"date_Time\": \"2020-05-27T22:36:00\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/order/online/{application}/{dish_id}/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"online",
								"{application}",
								"{dish_id}",
								"{transaction_id}"
							]
						},
						"description": "Create a new online order based on an app name, dish_id, and transaction_id"
					},
					"response": [
						{
							"name": "Create New Online_Order",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"user_ID\": 20,\n    \"date_Time\": \"2020-05-27T22:36:00\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:5001/api/order/online/uber eats/9/1",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "5001",
									"path": [
										"api",
										"order",
										"online",
										"uber eats",
										"9",
										"1"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": "Records inserted successfully in the Order, Online, and Order_Dish tables\n"
						}
					]
				},
				{
					"name": "Delete Order By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/order/{order_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"order",
								"{order_id}"
							]
						},
						"description": "Delete the order with the given order_id\r\n"
					},
					"response": [
						{
							"name": "Delete Order",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/order/21",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"order",
										"21"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:31:21 GMT"
								}
							],
							"cookie": [],
							"body": "Order with key=21 and Transaction with key=22 deleted succesfully from Order and Transaction tables\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Review",
			"item": [
				{
					"name": "Get All Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/review",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"review"
							]
						},
						"description": "List all reviews\r\n"
					},
					"response": [
						{
							"name": "Get All Reviews",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/review",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"review"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:32:13 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"user_ID\": 19,\n        \"review_ID\": 2,\n        \"description\": \"I had the salmon with rice. The salmon was little dry but apart from that the attention was good.\",\n        \"rating\": 4,\n        \"dish_ID\": 4\n    },\n    {\n        \"user_ID\": 20,\n        \"review_ID\": 3,\n        \"description\": \"I tried the vegetarian burger for the first time, I and don’t regret it. Keep up with the good work.\",\n        \"rating\": 5,\n        \"dish_ID\": 6\n    },\n    {\n        \"user_ID\": 21,\n        \"review_ID\": 4,\n        \"description\": \"This restaurant has the best chicken and corn that I have tried. Thank you for the great customer service.\",\n        \"rating\": 5,\n        \"dish_ID\": 5\n    },\n    {\n        \"user_ID\": 22,\n        \"review_ID\": 5,\n        \"description\": \"I had that panini and did not enjoy it at all. It was very dry and it was too small in size. I am not happy.\",\n        \"rating\": 1,\n        \"dish_ID\": 8\n    },\n    {\n        \"user_ID\": 23,\n        \"review_ID\": 6,\n        \"description\": \"The chicken wings were dry and overcooked. The fries where soggy. I won’t come back.\",\n        \"rating\": 1,\n        \"dish_ID\": 1\n    },\n    {\n        \"user_ID\": 24,\n        \"review_ID\": 7,\n        \"description\": \"The 24oz ribeye was simply magical. The broccoli is a good addition. Planning on going today!\",\n        \"rating\": 5,\n        \"dish_ID\": 3\n    },\n    {\n        \"user_ID\": 18,\n        \"review_ID\": 1,\n        \"description\": \"Was alright\",\n        \"rating\": 4,\n        \"dish_ID\": 1\n    },\n    {\n        \"user_ID\": 19,\n        \"review_ID\": 9,\n        \"description\": \"Was absolutely pretty good\",\n        \"rating\": 5,\n        \"dish_ID\": 1\n    }\n]"
						}
					]
				},
				{
					"name": "Get All User ID Reviews",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/review/{user_id}/{review_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"review",
								"{user_id}",
								"{review_id}"
							]
						},
						"description": "List the reviews corresponding to the user and review id"
					},
					"response": [
						{
							"name": "Get All User ID Reviews",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/review/19/8",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"review",
										"19",
										"8"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:07:50 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"user_ID\": 19,\n    \"review_ID\": 8,\n    \"description\": \"Was absolutely amazing\",\n    \"rating\": 5,\n    \"dish_ID\": 1\n}"
						}
					]
				},
				{
					"name": "Create New Review",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": 19,\n    \"description\": \"Was absolutely pretty good\",\n    \"rating\": 5,\n    \"dish_ID\": 1\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/review",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"review"
							]
						},
						"description": " Create a new review\r\n"
					},
					"response": [
						{
							"name": "Create New Review",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_ID\": 19,\r\n    \"description\": \"Was absolutely pretty good\",\r\n    \"rating\": 5,\r\n    \"dish_ID\": 1\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/review",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"review"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Mon, 07 Dec 2020 02:48:58 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Update Review",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"user_ID\": {user_id},\n    \"review_ID\": {review_id},\n    \"description\": \"Was absolutely pretty good!\",\n    \"rating\": 5,\n    \"dish_ID\": 1\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/review/{user_id}/{review_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"review",
								"{user_id}",
								"{review_id}"
							]
						},
						"description": "Updates a review based on a user_id and review_id. Dish being referenced should exist"
					},
					"response": [
						{
							"name": "Update Review",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"user_ID\": 19,\r\n    \"review_ID\": 9,\r\n    \"description\": \"Was absolutely pretty good!\",\r\n    \"rating\": 5,\r\n    \"dish_ID\": 1\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/review/19/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"review",
										"19",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:32:27 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=19,9 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Review",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/review/{user_id}/{review_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"review",
								"{user_id}",
								"{review_id}"
							]
						},
						"description": "Deletes a review based on a user_id and review_id"
					},
					"response": [
						{
							"name": "Delete Review",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/review/19/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"review",
										"19",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:32:36 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=19,9 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Table",
			"item": [
				{
					"name": "Get All Tables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/table",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table"
							]
						},
						"description": " List all tables\r\n"
					},
					"response": [
						{
							"name": "Get All Tables",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/table",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:33:32 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"tableNo\": 1,\n        \"location\": \"Center\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 9\n    },\n    {\n        \"tableNo\": 2,\n        \"location\": \"Center\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 9\n    },\n    {\n        \"tableNo\": 3,\n        \"location\": \"Left Upper Corner \",\n        \"isOccupied\": false,\n        \"waiter_ID\": 10\n    },\n    {\n        \"tableNo\": 4,\n        \"location\": \"Left Upper Corner \",\n        \"isOccupied\": false,\n        \"waiter_ID\": 10\n    },\n    {\n        \"tableNo\": 6,\n        \"location\": \"Center\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 12\n    },\n    {\n        \"tableNo\": 7,\n        \"location\": \"Right Upper Corner\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 13\n    },\n    {\n        \"tableNo\": 8,\n        \"location\": \"Left Lower Corner\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 14\n    },\n    {\n        \"tableNo\": 9,\n        \"location\": \"Right Upper Corner\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 15\n    },\n    {\n        \"tableNo\": 10,\n        \"location\": \"Left Lower Corner\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 16\n    },\n    {\n        \"tableNo\": 5,\n        \"location\": \"Right Lower Corner\",\n        \"isOccupied\": true,\n        \"waiter_ID\": 11\n    },\n    {\n        \"tableNo\": 12,\n        \"location\": \"Center\",\n        \"isOccupied\": true,\n        \"waiter_ID\": 9\n    }\n]"
						}
					]
				},
				{
					"name": "Get Table By Number",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/table/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table",
								"{tableno}"
							]
						},
						"description": "List the tables corresponding to the table number"
					},
					"response": [
						{
							"name": "Get Table Number",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/table/5",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table",
										"5"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:11:24 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"tableNo\": 5,\n    \"location\": \"Right Lower Corner\",\n    \"isOccupied\": false,\n    \"waiter_ID\": 11\n}"
						}
					]
				},
				{
					"name": "Get Tables Waited By",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/table/getWaitedBy/{waiter_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table",
								"getWaitedBy",
								"{waiter_id}"
							]
						},
						"description": "Get tables waited on by a particular waiter\r\n"
					},
					"response": [
						{
							"name": "Get Tables Waited By",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/table/getWaitedBy/9",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table",
										"getWaitedBy",
										"9"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:11:50 GMT"
								},
								{
									"key": "Content-Length",
									"value": "135"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"tableNo\": 1,\n        \"location\": \"Center\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 9\n    },\n    {\n        \"tableNo\": 2,\n        \"location\": \"Center\",\n        \"isOccupied\": false,\n        \"waiter_ID\": 9\n    }\n]"
						}
					]
				},
				{
					"name": "Get Occupied Tables",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/table/getOccupied",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table",
								"getOccupied"
							]
						},
						"description": "Get all occupied tables"
					},
					"response": [
						{
							"name": "Get Occupied Tables",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/table/getOccupied",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table",
										"getOccupied"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:12:14 GMT"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"tableNo\": 5,\n        \"location\": \"Right Lower Corner\",\n        \"isOccupied\": true,\n        \"waiter_ID\": 11\n    }\n]"
						}
					]
				},
				{
					"name": "Create New Table",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n        \"location\": \"Center\",\n        \"isOccupied\": true,\n        \"waiter_ID\": 9\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/table",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table"
							]
						},
						"description": "Create a new table"
					},
					"response": [
						{
							"name": "Create New Table",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"location\": \"Center\",\r\n        \"isOccupied\": true,\r\n        \"waiter_ID\": 9\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/table",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:33:10 GMT"
								}
							],
							"cookie": [],
							"body": "Record inserted successfully\n"
						}
					]
				},
				{
					"name": "Update Table",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"tableNo\": {tableno},\n    \"location\": \"Center\",\n    \"isOccupied\": false,\n    \"waiter_ID\": 9\n}\n"
						},
						"url": {
							"raw": "{{url}}/api/table/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table",
								"{tableno}"
							]
						},
						"description": " Updates a table based on a table number"
					},
					"response": [
						{
							"name": "Update Table",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"tableNo\": 12,\r\n    \"location\": \"Center\",\r\n    \"isOccupied\": false,\r\n    \"waiter_ID\": 9\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/table/12",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table",
										"12"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:33:44 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=12 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Table By Number",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/table/{tableno}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"table",
								"{tableno}"
							]
						},
						"description": "Deletes a table based on a table number"
					},
					"response": [
						{
							"name": "Delete Table",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/table/12",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"table",
										"12"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:33:48 GMT"
								},
								{
									"key": "Content-Length",
									"value": "152"
								}
							],
							"cookie": [],
							"body": "Record with key=12 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "Get All Transactions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/transaction",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"transaction"
							]
						},
						"description": " List all transaction\r\n"
					},
					"response": [
						{
							"name": "Get All Transactions",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/transaction",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"transaction"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:35:19 GMT"
								},
								{
									"key": "Content-Length",
									"value": "1271"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"transaction_ID\": 1,\n        \"amount\": 192.24,\n        \"date_Time\": \"2017-10-24T20:45:00\"\n    },\n    {\n        \"transaction_ID\": 3,\n        \"amount\": 43.38,\n        \"date_Time\": \"2020-05-27T22:36:00\"\n    },\n    {\n        \"transaction_ID\": 5,\n        \"amount\": 32.03,\n        \"date_Time\": \"2016-03-06T20:05:00\"\n    },\n    {\n        \"transaction_ID\": 6,\n        \"amount\": 3,\n        \"date_Time\": \"2019-07-13T23:59:00\"\n    },\n    {\n        \"transaction_ID\": 7,\n        \"amount\": 72.75,\n        \"date_Time\": \"2018-10-23T22:00:00\"\n    },\n    {\n        \"transaction_ID\": 8,\n        \"amount\": 193.77,\n        \"date_Time\": \"2020-06-23T21:50:00\"\n    },\n    {\n        \"transaction_ID\": 9,\n        \"amount\": 97.56,\n        \"date_Time\": \"2020-05-20T23:51:00\"\n    },\n    {\n        \"transaction_ID\": 10,\n        \"amount\": 93.56,\n        \"date_Time\": \"2020-01-23T23:03:00\"\n    },\n    {\n        \"transaction_ID\": 11,\n        \"amount\": 198.24,\n        \"date_Time\": \"2017-03-10T21:18:00\"\n    },\n    {\n        \"transaction_ID\": 12,\n        \"amount\": 93.78,\n        \"date_Time\": \"2015-05-19T22:48:00\"\n    },\n    {\n        \"transaction_ID\": 13,\n        \"amount\": 7,\n        \"date_Time\": \"2015-06-16T23:06:00\"\n    },\n    {\n        \"transaction_ID\": 14,\n        \"amount\": 338.15,\n        \"date_Time\": \"2019-01-02T22:45:00\"\n    },\n    {\n        \"transaction_ID\": 16,\n        \"amount\": 0,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"transaction_ID\": 17,\n        \"amount\": 7,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"transaction_ID\": 18,\n        \"amount\": 147.86,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"transaction_ID\": 2,\n        \"amount\": 116.64,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"transaction_ID\": 20,\n        \"amount\": 7,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    },\n    {\n        \"transaction_ID\": 21,\n        \"amount\": 7,\n        \"date_Time\": \"2019-01-11T22:01:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Get Transaction By ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/transaction/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"transaction",
								"{transaction_id}"
							]
						},
						"description": "List the transaction corresponding to the transaction_id"
					},
					"response": [
						{
							"name": "Get Transaction ID",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/transaction/3",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"transaction",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:12:54 GMT"
								}
							],
							"cookie": [],
							"body": "{\n    \"transaction_ID\": 3,\n    \"amount\": 43.38,\n    \"date_Time\": \"2020-05-27T22:36:00\"\n}"
						}
					]
				},
				{
					"name": "Get Transaction Amount",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/transaction/getAmount/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"transaction",
								"getAmount",
								"{transaction_id}"
							]
						},
						"description": "Get the amount (in dollars) of a transaction"
					},
					"response": [
						{
							"name": "Get Transaction Amount",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/transaction/getAmount/3",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"transaction",
										"getAmount",
										"3"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:12:58 GMT"
								}
							],
							"cookie": [],
							"body": "The amount of dollars for the transaction with id=3 is $43.38\n"
						}
					]
				},
				{
					"name": "Update Transaction",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"transaction_ID\": {transaction_id},\n    \"amount\": 50.78,\n    \"date_Time\": \"2020-06-08T21:58:00\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/transaction/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"transaction",
								"{transaction_id}"
							]
						},
						"description": "Updates a transaction based on a transaction id\r\n\r\n"
					},
					"response": [
						{
							"name": "Update Transaction",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"transaction_ID\": 19,\r\n    \"amount\": 50.78,\r\n    \"date_Time\": \"2020-06-08T21:58:00\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://localhost:44305/api/transaction/19",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"transaction",
										"19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:35:11 GMT"
								}
							],
							"cookie": [],
							"body": "The record with key=19 was updated succesfully\n"
						}
					]
				},
				{
					"name": "Delete Transaction By ID",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/transaction/{transaction_id}",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"transaction",
								"{transaction_id}"
							]
						},
						"description": "Deletes a transaction based on a transaction_id"
					},
					"response": [
						{
							"name": "Delete Transaction",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "https://localhost:44305/api/transaction/19",
									"protocol": "https",
									"host": [
										"localhost"
									],
									"port": "44305",
									"path": [
										"api",
										"transaction",
										"19"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								},
								{
									"key": "Content-Type",
									"value": "text/plain; charset=utf-8"
								},
								{
									"key": "Content-Encoding",
									"value": "gzip"
								},
								{
									"key": "Vary",
									"value": "Accept-Encoding"
								},
								{
									"key": "Server",
									"value": "Microsoft-IIS/10.0"
								},
								{
									"key": "X-Powered-By",
									"value": "ASP.NET"
								},
								{
									"key": "Date",
									"value": "Sun, 06 Dec 2020 22:35:17 GMT"
								}
							],
							"cookie": [],
							"body": "Record with key=19 deleted succesfully\n"
						}
					]
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}